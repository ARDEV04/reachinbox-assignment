{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import axios from'axios';import'./ThreadReply.css';/**\r\n * ThreadReply component - Handles replying to email threads\r\n * \r\n * @param {Object} props - Component props\r\n * @param {Object} props.thread - The thread to reply to\r\n * @param {string} props.token - Authentication token\r\n * @param {Function} props.onReplySuccess - Callback function when reply is successful\r\n * @param {Function} props.onReplyError - Callback function when reply fails\r\n * @param {Function} props.onReplyStart - Callback function when reply starts\r\n * @param {Function} props.onCancel - Callback function when reply is cancelled\r\n * @param {boolean} props.isOpen - Whether the reply form is open\r\n * @param {Object} props.defaultValues - Default values for the reply form\r\n */import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const ThreadReply=_ref=>{let{thread,token,onReplySuccess,onReplyError,onReplyStart,onCancel,isOpen=false,defaultValues={}}=_ref;const[replyText,setReplyText]=useState(defaultValues.body||'');const[toName,setToName]=useState(defaultValues.toName||'');const[toEmail,setToEmail]=useState(defaultValues.to||'');const[fromName,setFromName]=useState(defaultValues.fromName||'');const[fromEmail,setFromEmail]=useState(defaultValues.from||'');const[subject,setSubject]=useState(defaultValues.subject||'');const[isSending,setIsSending]=useState(false);const[showAdvanced,setShowAdvanced]=useState(false);const replyTextareaRef=useRef(null);// Focus on the reply textarea when the component opens\nuseEffect(()=>{if(isOpen&&replyTextareaRef.current){replyTextareaRef.current.focus();}},[isOpen]);// Handle sending the reply\nconst handleSendReply=async e=>{e.preventDefault();if(!thread||!thread.threadId){console.error('No thread or thread ID provided for reply');if(onReplyError){onReplyError(new Error('No thread or thread ID provided for reply'));}return;}if(!replyText.trim()){if(onReplyError){onReplyError(new Error('Reply text cannot be empty'));}return;}setIsSending(true);// Call the onReplyStart callback if provided\nif(onReplyStart){onReplyStart(thread);}try{// Prepare the reply data\nconst replyData={body:replyText,// Include optional fields if they have values\n...(toName&&{toName}),...(toEmail&&{to:toEmail}),...(fromName&&{fromName}),...(fromEmail&&{from:fromEmail}),...(subject&&{subject}),// These fields would typically come from the thread data\n// but we're allowing them to be overridden if needed\nreferences:defaultValues.references||[],inReplyTo:defaultValues.inReplyTo||''};// Make the API call to send the reply\nconst config={method:'post',maxBodyLength:Infinity,url:`https://hiring.reachinbox.xyz/api/v1/onebox/reply/${thread.threadId}`,headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`},data:replyData};const response=await axios.request(config);console.log(\"Reply response:\",JSON.stringify(response.data));// Call the onReplySuccess callback if provided\nif(onReplySuccess){onReplySuccess(response.data,thread);}// Reset the form\nsetReplyText('');// Close the form if there's a cancel handler\nif(onCancel){onCancel();}}catch(error){console.error(\"Error sending reply:\",error);// Call the onReplyError callback if provided\nif(onReplyError){onReplyError(error,thread);}}finally{setIsSending(false);}};// If the component is not open, don't render anything\nif(!isOpen){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:\"thread-reply\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Reply to: \",(thread===null||thread===void 0?void 0:thread.subject)||'Thread']}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSendReply,children:[/*#__PURE__*/_jsx(\"div\",{className:\"reply-form-header\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"toggle-advanced-button\",onClick:()=>setShowAdvanced(!showAdvanced),children:showAdvanced?'Hide Advanced Options':'Show Advanced Options'})}),showAdvanced&&/*#__PURE__*/_jsxs(\"div\",{className:\"advanced-options\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"toName\",children:\"Recipient Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"toName\",value:toName,onChange:e=>setToName(e.target.value),placeholder:\"Recipient Name\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"toEmail\",children:\"Recipient Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"toEmail\",value:toEmail,onChange:e=>setToEmail(e.target.value),placeholder:\"recipient@example.com\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fromName\",children:\"Sender Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"fromName\",value:fromName,onChange:e=>setFromName(e.target.value),placeholder:\"Your Name\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fromEmail\",children:\"Sender Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"fromEmail\",value:fromEmail,onChange:e=>setFromEmail(e.target.value),placeholder:\"your@example.com\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"subject\",children:\"Subject:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"subject\",value:subject,onChange:e=>setSubject(e.target.value),placeholder:\"Re: Original Subject\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"replyText\",children:\"Your Reply:\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"replyText\",ref:replyTextareaRef,value:replyText,onChange:e=>setReplyText(e.target.value),placeholder:\"Type your reply here...\",rows:5,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"reply-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onCancel,className:\"cancel-button\",disabled:isSending,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-button\",disabled:isSending||!replyText.trim(),children:isSending?'Sending...':'Send Reply'})]})]})]});};export default ThreadReply;","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxs","_jsxs","jsx","_jsx","ThreadReply","_ref","thread","token","onReplySuccess","onReplyError","onReplyStart","onCancel","isOpen","defaultValues","replyText","setReplyText","body","toName","setToName","toEmail","setToEmail","to","fromName","setFromName","fromEmail","setFromEmail","from","subject","setSubject","isSending","setIsSending","showAdvanced","setShowAdvanced","replyTextareaRef","current","focus","handleSendReply","e","preventDefault","threadId","console","error","Error","trim","replyData","references","inReplyTo","config","method","maxBodyLength","Infinity","url","headers","data","response","request","log","JSON","stringify","className","children","onSubmit","type","onClick","htmlFor","id","value","onChange","target","placeholder","ref","rows","required","disabled"],"sources":["D:/OneDrive/Desktop/prj/intern_ass/reachinbox-assignment/src/components/ThreadReply.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ThreadReply.css';\r\n\r\n/**\r\n * ThreadReply component - Handles replying to email threads\r\n * \r\n * @param {Object} props - Component props\r\n * @param {Object} props.thread - The thread to reply to\r\n * @param {string} props.token - Authentication token\r\n * @param {Function} props.onReplySuccess - Callback function when reply is successful\r\n * @param {Function} props.onReplyError - Callback function when reply fails\r\n * @param {Function} props.onReplyStart - Callback function when reply starts\r\n * @param {Function} props.onCancel - Callback function when reply is cancelled\r\n * @param {boolean} props.isOpen - Whether the reply form is open\r\n * @param {Object} props.defaultValues - Default values for the reply form\r\n */\r\nconst ThreadReply = ({ \r\n  thread,\r\n  token,\r\n  onReplySuccess,\r\n  onReplyError,\r\n  onReplyStart,\r\n  onCancel,\r\n  isOpen = false,\r\n  defaultValues = {}\r\n}) => {\r\n  const [replyText, setReplyText] = useState(defaultValues.body || '');\r\n  const [toName, setToName] = useState(defaultValues.toName || '');\r\n  const [toEmail, setToEmail] = useState(defaultValues.to || '');\r\n  const [fromName, setFromName] = useState(defaultValues.fromName || '');\r\n  const [fromEmail, setFromEmail] = useState(defaultValues.from || '');\r\n  const [subject, setSubject] = useState(defaultValues.subject || '');\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [showAdvanced, setShowAdvanced] = useState(false);\r\n  \r\n  const replyTextareaRef = useRef(null);\r\n\r\n  // Focus on the reply textarea when the component opens\r\n  useEffect(() => {\r\n    if (isOpen && replyTextareaRef.current) {\r\n      replyTextareaRef.current.focus();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Handle sending the reply\r\n  const handleSendReply = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!thread || !thread.threadId) {\r\n      console.error('No thread or thread ID provided for reply');\r\n      if (onReplyError) {\r\n        onReplyError(new Error('No thread or thread ID provided for reply'));\r\n      }\r\n      return;\r\n    }\r\n    \r\n    if (!replyText.trim()) {\r\n      if (onReplyError) {\r\n        onReplyError(new Error('Reply text cannot be empty'));\r\n      }\r\n      return;\r\n    }\r\n    \r\n    setIsSending(true);\r\n    \r\n    // Call the onReplyStart callback if provided\r\n    if (onReplyStart) {\r\n      onReplyStart(thread);\r\n    }\r\n    \r\n    try {\r\n      // Prepare the reply data\r\n      const replyData = {\r\n        body: replyText,\r\n        // Include optional fields if they have values\r\n        ...(toName && { toName }),\r\n        ...(toEmail && { to: toEmail }),\r\n        ...(fromName && { fromName }),\r\n        ...(fromEmail && { from: fromEmail }),\r\n        ...(subject && { subject }),\r\n        // These fields would typically come from the thread data\r\n        // but we're allowing them to be overridden if needed\r\n        references: defaultValues.references || [],\r\n        inReplyTo: defaultValues.inReplyTo || ''\r\n      };\r\n      \r\n      // Make the API call to send the reply\r\n      const config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: `https://hiring.reachinbox.xyz/api/v1/onebox/reply/${thread.threadId}`,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        data: replyData\r\n      };\r\n      \r\n      const response = await axios.request(config);\r\n      console.log(\"Reply response:\", JSON.stringify(response.data));\r\n      \r\n      // Call the onReplySuccess callback if provided\r\n      if (onReplySuccess) {\r\n        onReplySuccess(response.data, thread);\r\n      }\r\n      \r\n      // Reset the form\r\n      setReplyText('');\r\n      \r\n      // Close the form if there's a cancel handler\r\n      if (onCancel) {\r\n        onCancel();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending reply:\", error);\r\n      \r\n      // Call the onReplyError callback if provided\r\n      if (onReplyError) {\r\n        onReplyError(error, thread);\r\n      }\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  // If the component is not open, don't render anything\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"thread-reply\">\r\n      <h3>Reply to: {thread?.subject || 'Thread'}</h3>\r\n      <form onSubmit={handleSendReply}>\r\n        <div className=\"reply-form-header\">\r\n          <button \r\n            type=\"button\" \r\n            className=\"toggle-advanced-button\"\r\n            onClick={() => setShowAdvanced(!showAdvanced)}\r\n          >\r\n            {showAdvanced ? 'Hide Advanced Options' : 'Show Advanced Options'}\r\n          </button>\r\n        </div>\r\n        \r\n        {showAdvanced && (\r\n          <div className=\"advanced-options\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"toName\">Recipient Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"toName\"\r\n                value={toName}\r\n                onChange={(e) => setToName(e.target.value)}\r\n                placeholder=\"Recipient Name\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"toEmail\">Recipient Email:</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"toEmail\"\r\n                value={toEmail}\r\n                onChange={(e) => setToEmail(e.target.value)}\r\n                placeholder=\"recipient@example.com\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"fromName\">Sender Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"fromName\"\r\n                value={fromName}\r\n                onChange={(e) => setFromName(e.target.value)}\r\n                placeholder=\"Your Name\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"fromEmail\">Sender Email:</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"fromEmail\"\r\n                value={fromEmail}\r\n                onChange={(e) => setFromEmail(e.target.value)}\r\n                placeholder=\"your@example.com\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"subject\">Subject:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setSubject(e.target.value)}\r\n                placeholder=\"Re: Original Subject\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"replyText\">Your Reply:</label>\r\n          <textarea\r\n            id=\"replyText\"\r\n            ref={replyTextareaRef}\r\n            value={replyText}\r\n            onChange={(e) => setReplyText(e.target.value)}\r\n            placeholder=\"Type your reply here...\"\r\n            rows={5}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"reply-actions\">\r\n          <button \r\n            type=\"button\" \r\n            onClick={onCancel}\r\n            className=\"cancel-button\"\r\n            disabled={isSending}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button \r\n            type=\"submit\"\r\n            className=\"send-button\"\r\n            disabled={isSending || !replyText.trim()}\r\n          >\r\n            {isSending ? 'Sending...' : 'Send Reply'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadReply;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAC1D,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,mBAAmB,CAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAZA,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAaA,KAAM,CAAAC,WAAW,CAAGC,IAAA,EASd,IATe,CACnBC,MAAM,CACNC,KAAK,CACLC,cAAc,CACdC,YAAY,CACZC,YAAY,CACZC,QAAQ,CACRC,MAAM,CAAG,KAAK,CACdC,aAAa,CAAG,CAAC,CACnB,CAAC,CAAAR,IAAA,CACC,KAAM,CAACS,SAAS,CAAEC,YAAY,CAAC,CAAGnB,QAAQ,CAACiB,aAAa,CAACG,IAAI,EAAI,EAAE,CAAC,CACpE,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGtB,QAAQ,CAACiB,aAAa,CAACI,MAAM,EAAI,EAAE,CAAC,CAChE,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGxB,QAAQ,CAACiB,aAAa,CAACQ,EAAE,EAAI,EAAE,CAAC,CAC9D,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAG3B,QAAQ,CAACiB,aAAa,CAACS,QAAQ,EAAI,EAAE,CAAC,CACtE,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAG7B,QAAQ,CAACiB,aAAa,CAACa,IAAI,EAAI,EAAE,CAAC,CACpE,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGhC,QAAQ,CAACiB,aAAa,CAACc,OAAO,EAAI,EAAE,CAAC,CACnE,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGlC,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACmC,YAAY,CAAEC,eAAe,CAAC,CAAGpC,QAAQ,CAAC,KAAK,CAAC,CAEvD,KAAM,CAAAqC,gBAAgB,CAAGpC,MAAM,CAAC,IAAI,CAAC,CAErC;AACAC,SAAS,CAAC,IAAM,CACd,GAAIc,MAAM,EAAIqB,gBAAgB,CAACC,OAAO,CAAE,CACtCD,gBAAgB,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,CAClC,CACF,CAAC,CAAE,CAACvB,MAAM,CAAC,CAAC,CAEZ;AACA,KAAM,CAAAwB,eAAe,CAAG,KAAO,CAAAC,CAAC,EAAK,CACnCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB,GAAI,CAAChC,MAAM,EAAI,CAACA,MAAM,CAACiC,QAAQ,CAAE,CAC/BC,OAAO,CAACC,KAAK,CAAC,2CAA2C,CAAC,CAC1D,GAAIhC,YAAY,CAAE,CAChBA,YAAY,CAAC,GAAI,CAAAiC,KAAK,CAAC,2CAA2C,CAAC,CAAC,CACtE,CACA,OACF,CAEA,GAAI,CAAC5B,SAAS,CAAC6B,IAAI,CAAC,CAAC,CAAE,CACrB,GAAIlC,YAAY,CAAE,CAChBA,YAAY,CAAC,GAAI,CAAAiC,KAAK,CAAC,4BAA4B,CAAC,CAAC,CACvD,CACA,OACF,CAEAZ,YAAY,CAAC,IAAI,CAAC,CAElB;AACA,GAAIpB,YAAY,CAAE,CAChBA,YAAY,CAACJ,MAAM,CAAC,CACtB,CAEA,GAAI,CACF;AACA,KAAM,CAAAsC,SAAS,CAAG,CAChB5B,IAAI,CAAEF,SAAS,CACf;AACA,IAAIG,MAAM,EAAI,CAAEA,MAAO,CAAC,CAAC,CACzB,IAAIE,OAAO,EAAI,CAAEE,EAAE,CAAEF,OAAQ,CAAC,CAAC,CAC/B,IAAIG,QAAQ,EAAI,CAAEA,QAAS,CAAC,CAAC,CAC7B,IAAIE,SAAS,EAAI,CAAEE,IAAI,CAAEF,SAAU,CAAC,CAAC,CACrC,IAAIG,OAAO,EAAI,CAAEA,OAAQ,CAAC,CAAC,CAC3B;AACA;AACAkB,UAAU,CAAEhC,aAAa,CAACgC,UAAU,EAAI,EAAE,CAC1CC,SAAS,CAAEjC,aAAa,CAACiC,SAAS,EAAI,EACxC,CAAC,CAED;AACA,KAAM,CAAAC,MAAM,CAAG,CACbC,MAAM,CAAE,MAAM,CACdC,aAAa,CAAEC,QAAQ,CACvBC,GAAG,CAAE,qDAAqD7C,MAAM,CAACiC,QAAQ,EAAE,CAC3Ea,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,CAAE,UAAU7C,KAAK,EAClC,CAAC,CACD8C,IAAI,CAAET,SACR,CAAC,CAED,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAAvD,KAAK,CAACwD,OAAO,CAACR,MAAM,CAAC,CAC5CP,OAAO,CAACgB,GAAG,CAAC,iBAAiB,CAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAACD,IAAI,CAAC,CAAC,CAE7D;AACA,GAAI7C,cAAc,CAAE,CAClBA,cAAc,CAAC8C,QAAQ,CAACD,IAAI,CAAE/C,MAAM,CAAC,CACvC,CAEA;AACAS,YAAY,CAAC,EAAE,CAAC,CAEhB;AACA,GAAIJ,QAAQ,CAAE,CACZA,QAAQ,CAAC,CAAC,CACZ,CACF,CAAE,MAAO8B,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAE5C;AACA,GAAIhC,YAAY,CAAE,CAChBA,YAAY,CAACgC,KAAK,CAAEnC,MAAM,CAAC,CAC7B,CACF,CAAC,OAAS,CACRwB,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED;AACA,GAAI,CAAClB,MAAM,CAAE,CACX,MAAO,KAAI,CACb,CAEA,mBACEX,KAAA,QAAK0D,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B3D,KAAA,OAAA2D,QAAA,EAAI,YAAU,CAAC,CAAAtD,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEqB,OAAO,GAAI,QAAQ,EAAK,CAAC,cAChD1B,KAAA,SAAM4D,QAAQ,CAAEzB,eAAgB,CAAAwB,QAAA,eAC9BzD,IAAA,QAAKwD,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChCzD,IAAA,WACE2D,IAAI,CAAC,QAAQ,CACbH,SAAS,CAAC,wBAAwB,CAClCI,OAAO,CAAEA,CAAA,GAAM/B,eAAe,CAAC,CAACD,YAAY,CAAE,CAAA6B,QAAA,CAE7C7B,YAAY,CAAG,uBAAuB,CAAG,uBAAuB,CAC3D,CAAC,CACN,CAAC,CAELA,YAAY,eACX9B,KAAA,QAAK0D,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/B3D,KAAA,QAAK0D,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBzD,IAAA,UAAO6D,OAAO,CAAC,QAAQ,CAAAJ,QAAA,CAAC,iBAAe,CAAO,CAAC,cAC/CzD,IAAA,UACE2D,IAAI,CAAC,MAAM,CACXG,EAAE,CAAC,QAAQ,CACXC,KAAK,CAAEjD,MAAO,CACdkD,QAAQ,CAAG9B,CAAC,EAAKnB,SAAS,CAACmB,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE,CAC3CG,WAAW,CAAC,gBAAgB,CAC7B,CAAC,EACC,CAAC,cAENpE,KAAA,QAAK0D,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBzD,IAAA,UAAO6D,OAAO,CAAC,SAAS,CAAAJ,QAAA,CAAC,kBAAgB,CAAO,CAAC,cACjDzD,IAAA,UACE2D,IAAI,CAAC,OAAO,CACZG,EAAE,CAAC,SAAS,CACZC,KAAK,CAAE/C,OAAQ,CACfgD,QAAQ,CAAG9B,CAAC,EAAKjB,UAAU,CAACiB,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE,CAC5CG,WAAW,CAAC,uBAAuB,CACpC,CAAC,EACC,CAAC,cAENpE,KAAA,QAAK0D,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBzD,IAAA,UAAO6D,OAAO,CAAC,UAAU,CAAAJ,QAAA,CAAC,cAAY,CAAO,CAAC,cAC9CzD,IAAA,UACE2D,IAAI,CAAC,MAAM,CACXG,EAAE,CAAC,UAAU,CACbC,KAAK,CAAE5C,QAAS,CAChB6C,QAAQ,CAAG9B,CAAC,EAAKd,WAAW,CAACc,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE,CAC7CG,WAAW,CAAC,WAAW,CACxB,CAAC,EACC,CAAC,cAENpE,KAAA,QAAK0D,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBzD,IAAA,UAAO6D,OAAO,CAAC,WAAW,CAAAJ,QAAA,CAAC,eAAa,CAAO,CAAC,cAChDzD,IAAA,UACE2D,IAAI,CAAC,OAAO,CACZG,EAAE,CAAC,WAAW,CACdC,KAAK,CAAE1C,SAAU,CACjB2C,QAAQ,CAAG9B,CAAC,EAAKZ,YAAY,CAACY,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE,CAC9CG,WAAW,CAAC,kBAAkB,CAC/B,CAAC,EACC,CAAC,cAENpE,KAAA,QAAK0D,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBzD,IAAA,UAAO6D,OAAO,CAAC,SAAS,CAAAJ,QAAA,CAAC,UAAQ,CAAO,CAAC,cACzCzD,IAAA,UACE2D,IAAI,CAAC,MAAM,CACXG,EAAE,CAAC,SAAS,CACZC,KAAK,CAAEvC,OAAQ,CACfwC,QAAQ,CAAG9B,CAAC,EAAKT,UAAU,CAACS,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE,CAC5CG,WAAW,CAAC,sBAAsB,CACnC,CAAC,EACC,CAAC,EACH,CACN,cAEDpE,KAAA,QAAK0D,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBzD,IAAA,UAAO6D,OAAO,CAAC,WAAW,CAAAJ,QAAA,CAAC,aAAW,CAAO,CAAC,cAC9CzD,IAAA,aACE8D,EAAE,CAAC,WAAW,CACdK,GAAG,CAAErC,gBAAiB,CACtBiC,KAAK,CAAEpD,SAAU,CACjBqD,QAAQ,CAAG9B,CAAC,EAAKtB,YAAY,CAACsB,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE,CAC9CG,WAAW,CAAC,yBAAyB,CACrCE,IAAI,CAAE,CAAE,CACRC,QAAQ,MACT,CAAC,EACC,CAAC,cAENvE,KAAA,QAAK0D,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BzD,IAAA,WACE2D,IAAI,CAAC,QAAQ,CACbC,OAAO,CAAEpD,QAAS,CAClBgD,SAAS,CAAC,eAAe,CACzBc,QAAQ,CAAE5C,SAAU,CAAA+B,QAAA,CACrB,QAED,CAAQ,CAAC,cACTzD,IAAA,WACE2D,IAAI,CAAC,QAAQ,CACbH,SAAS,CAAC,aAAa,CACvBc,QAAQ,CAAE5C,SAAS,EAAI,CAACf,SAAS,CAAC6B,IAAI,CAAC,CAAE,CAAAiB,QAAA,CAExC/B,SAAS,CAAG,YAAY,CAAG,YAAY,CAClC,CAAC,EACN,CAAC,EACF,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}