{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Desktop\\\\prj\\\\intern_ass\\\\reachinbox-assignment\\\\src\\\\components\\\\OneBox.js\",\n  _s = $RefreshSig$();\n// Fix the imports - remove useRef if not needed, add useCallback\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport './OneBox.css';\nimport ThreadDeletion from './ThreadDeletion';\nimport ThreadReply from './ThreadReply';\nimport ResetOneBox from './ResetOneBox';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OneBox() {\n  _s();\n  const [threads, setThreads] = useState([]);\n  const [selectedThread, setSelectedThread] = useState(null);\n  const [threadMessages, setThreadMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [messageLoading, setMessageLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeComponent, setActiveComponent] = useState('threadList');\n  const [searchThreadId, setSearchThreadId] = useState('');\n  const [showReplyBox, setShowReplyBox] = useState(false);\n  const [notification, setNotification] = useState(null);\n\n  // Use the correct token that works in other components\n  const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImVtYWlsIjoibW9udXJhbmphbjI1MUBnbWFpbC5jb20iLCJpZCI6MTU3OSwiZmlyc3ROYW1lIjoiQmlub2QiLCJsYXN0TmFtZSI6IkJoYWkifSwiaWF0IjoxNzQ2OTgwNTkyLCJleHAiOjE3Nzg1MTY1OTJ9.DrALXAi4YICQv0USd6W0S8f4yCleWM2z5pLSM1MaE-0';\n\n  // Make the API call when the component mounts\n  useEffect(() => {\n    const fetchThreads = async () => {\n      try {\n        console.log(\"Fetching threads...\"); // Debug log\n\n        // Use the exact same configuration as in the working getThreads.js\n        const config = {\n          method: 'get',\n          url: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        };\n        const response = await axios(config);\n\n        // Debug log for response\n        console.log(\"API Response:\", response);\n        if (response.data && response.data.data) {\n          setThreads(response.data.data);\n        } else {\n          setError('No threads found.');\n        }\n      } catch (err) {\n        console.error('Error fetching threads:', err);\n        if (err.response) {\n          console.error(`Status: ${err.response.status}`);\n          console.error(\"Response:\", err.response.data);\n          setError(`Failed to fetch threads: ${err.response.status} - ${JSON.stringify(err.response.data)}`);\n        } else if (err.request) {\n          console.error(\"No response received:\", err.request);\n          setError('No response received from server.');\n        } else {\n          console.error(\"Error:\", err.message);\n          setError(`Error: ${err.message}`);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchThreads();\n  }, []);\n\n  // Handle reply thread action\n  const handleReplyThread = useCallback(() => {\n    setShowReplyBox(true);\n    setNotification({\n      type: 'info',\n      message: 'Reply box opened (Shortcut: R)'\n    });\n  }, [setShowReplyBox, setNotification]);\n\n  // Keyboard shortcuts handler with proper dependencies\n  useEffect(() => {\n    const handleKeyDown = e => {\n      // Only apply shortcuts when not typing in an input or textarea\n      if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {\n        return;\n      }\n\n      // Only apply shortcuts when in thread messages view\n      if (activeComponent === 'threadMessages' && selectedThread) {\n        if (e.key === 'd' || e.key === 'D') {\n          var _document$querySelect;\n          // Find and click the delete button from ThreadDeletion component\n          (_document$querySelect = document.querySelector('.thread-delete-button')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.click();\n        } else if (e.key === 'r' || e.key === 'R') {\n          handleReplyThread();\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [activeComponent, selectedThread, handleReplyThread]);\n\n  // Auto-dismiss notification after 3 seconds\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // Fetch messages for a specific thread\n  const fetchThreadMessages = async threadId => {\n    setMessageLoading(true);\n    setError(null); // Clear any previous errors\n    try {\n      console.log(`Fetching messages for thread ${threadId}...`);\n      const config = {\n        method: 'get',\n        maxBodyLength: Infinity,\n        url: `https://hiring.reachinbox.xyz/api/v1/onebox/messages/${threadId}`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios(config);\n      console.log(\"Thread Messages Response:\", response);\n      if (response.data && response.data.data) {\n        setThreadMessages(response.data.data);\n        // Find the thread in our list to set as selected\n        const thread = threads.find(t => t.threadId === threadId);\n        if (thread) {\n          setSelectedThread(thread);\n        } else {\n          // If thread not found in our list, create a minimal thread object\n          setSelectedThread({\n            threadId,\n            subject: `Thread #${threadId}`\n          });\n        }\n        setActiveComponent('threadMessages');\n      } else {\n        setError('No messages found for this thread.');\n      }\n    } catch (err) {\n      console.error('Error fetching thread messages:', err);\n      setError(`Failed to fetch thread messages: ${err.message}`);\n    } finally {\n      setMessageLoading(false);\n    }\n  };\n\n  // Handle thread selection\n  const handleThreadSelect = thread => {\n    setSelectedThread(thread);\n    fetchThreadMessages(thread.threadId);\n  };\n\n  // Handle thread ID search\n  const handleThreadSearch = e => {\n    e.preventDefault();\n    if (searchThreadId.trim()) {\n      fetchThreadMessages(searchThreadId.trim());\n    }\n  };\n\n  // Render the active component based on state\n  const renderActiveComponent = () => {\n    if (loading && activeComponent === 'threadList') return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading threads...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 61\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 23\n    }, this);\n    switch (activeComponent) {\n      case 'threadList':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Email Threads\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), threads.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No threads available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ThreadListDisplay, {\n            threads: threads,\n            onSelectThread: handleThreadSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      case 'threadMessages':\n        if (messageLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 36\n        }, this);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"thread-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back-button\",\n              onClick: () => {\n                setActiveComponent('threadList');\n                setShowReplyBox(false);\n              },\n              children: \"\\u2190 Back to Threads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: (selectedThread === null || selectedThread === void 0 ? void 0 : selectedThread.subject) || 'Thread Messages'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"thread-actions\",\n              children: [/*#__PURE__*/_jsxDEV(ThreadDeletion, {\n                thread: selectedThread,\n                token: token,\n                onDeleteStart: thread => {\n                  setNotification({\n                    type: 'info',\n                    message: `Deleting thread \"${thread.subject}\"...`\n                  });\n                },\n                onDeleteSuccess: (thread, data) => {\n                  setNotification({\n                    type: 'success',\n                    message: `Thread \"${thread.subject}\" deleted successfully (Shortcut: D)`\n                  });\n\n                  // Remove the thread from the local state\n                  setThreads(threads => threads.filter(t => t.threadId !== thread.threadId));\n\n                  // Go back to thread list after deletion\n                  setActiveComponent('threadList');\n                },\n                onDeleteError: (error, thread) => {\n                  var _error$response, _error$response$data;\n                  setNotification({\n                    type: 'error',\n                    message: `Failed to delete thread: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`\n                  });\n                },\n                showConfirmation: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button reply-button\",\n                onClick: handleReplyThread,\n                title: \"Reply to Thread (R)\",\n                children: \"Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleThreadSearch,\n              className: \"thread-search-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: searchThreadId,\n                onChange: e => setSearchThreadId(e.target.value),\n                placeholder: \"Search by Thread ID\",\n                className: \"thread-search-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"thread-search-button\",\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ThreadReply, {\n            thread: selectedThread,\n            token: token,\n            isOpen: showReplyBox,\n            onReplyStart: thread => {\n              setNotification({\n                type: 'info',\n                message: `Sending reply to \"${thread.subject}\"...`\n              });\n            },\n            onReplySuccess: (data, thread) => {\n              setNotification({\n                type: 'success',\n                message: 'Reply sent successfully!'\n              });\n\n              // Refresh the thread messages to include the new reply\n              fetchThreadMessages(thread.threadId);\n            },\n            onReplyError: (error, thread) => {\n              var _error$response2, _error$response2$data;\n              setNotification({\n                type: 'error',\n                message: `Failed to send reply: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`\n              });\n            },\n            onCancel: () => setShowReplyBox(false),\n            defaultValues: {\n              // You can pre-populate these values based on the selected thread\n              subject: `Re: ${(selectedThread === null || selectedThread === void 0 ? void 0 : selectedThread.subject) || ''}`\n              // Add other default values as needed\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), threadMessages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No messages available for this thread.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ThreadMessagesDisplay, {\n            messages: threadMessages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a component from the sidebar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"onebox-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"onebox-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"OneBox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: activeComponent === 'threadList' ? 'active' : '',\n          onClick: () => setActiveComponent('threadList'),\n          children: \"Thread List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: activeComponent === 'threadMessages' ? 'active' : '',\n          onClick: () => {\n            if (selectedThread) {\n              setActiveComponent('threadMessages');\n            } else {\n              setActiveComponent('threadMessages');\n              setThreadMessages([]);\n            }\n          },\n          children: \"Thread Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-actions\",\n        children: /*#__PURE__*/_jsxDEV(ResetOneBox, {\n          token: token,\n          onResetStart: () => {\n            setNotification({\n              type: 'info',\n              message: 'Resetting OneBox data...'\n            });\n          },\n          onResetSuccess: data => {\n            setNotification({\n              type: 'success',\n              message: 'OneBox data reset successfully!'\n            });\n\n            // Clear thread messages\n            setThreadMessages([]);\n\n            // Clear selected thread\n            setSelectedThread(null);\n\n            // Go back to thread list\n            setActiveComponent('threadList');\n\n            // Close reply box if open\n            setShowReplyBox(false);\n\n            // Refresh the threads list\n            setLoading(true);\n\n            // Fetch threads again\n            const fetchThreads = async () => {\n              try {\n                const config = {\n                  method: 'get',\n                  url: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\n                  headers: {\n                    Authorization: `Bearer ${token}`\n                  }\n                };\n                const response = await axios(config);\n                if (response.data && response.data.data) {\n                  setThreads(response.data.data);\n                } else {\n                  setError('No threads found.');\n                }\n              } catch (err) {\n                console.error('Error fetching threads:', err);\n                setError(`Failed to fetch threads: ${err.message}`);\n              } finally {\n                setLoading(false);\n              }\n            };\n            fetchThreads();\n          },\n          onResetError: error => {\n            var _error$response3, _error$response3$data;\n            setNotification({\n              type: 'error',\n              message: `Failed to reset data: ${((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message}`\n            });\n          },\n          showConfirmation: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyboard-shortcuts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Keyboard Shortcuts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 11\n            }, this), \" - Delete thread\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 11\n            }, this), \" - Reply to thread\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"onebox-main-content\",\n      children: renderActiveComponent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification ${notification.type}`,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n}\n\n// Component to display threads\n_s(OneBox, \"mRVbrkNjb3Bk8O/RZwRU6vVsPac=\");\n_c = OneBox;\nfunction ThreadListDisplay({\n  threads,\n  onSelectThread\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"threads-list\",\n    children: threads.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-card\",\n      onClick: () => onSelectThread(thread),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: thread.subject || 'No Subject'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: thread.body ? thread.body.substring(0, 100) + '...' : 'No body available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Thread ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 14\n        }, this), \" \", thread.threadId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this), thread.fromName && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"From:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 34\n        }, this), \" \", thread.fromName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 31\n      }, this), thread.toEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"To:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 33\n        }, this), \" \", thread.toEmail]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-thread\",\n        children: \"View Messages \\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this)]\n    }, thread.id || thread.threadId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 420,\n    columnNumber: 5\n  }, this);\n}\n\n// Component to display thread messages\n_c2 = ThreadListDisplay;\nfunction ThreadMessagesDisplay({\n  messages\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thread-messages\",\n    children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-from\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"From:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), \" \", message.fromName || message.from || 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-to\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"To:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this), \" \", message.toName || message.to || 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-date\",\n          children: new Date(message.date).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-subject\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Subject:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), \" \", message.subject || 'No Subject']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-body\",\n        dangerouslySetInnerHTML: {\n          __html: message.body || 'No content'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this)]\n    }, message.id || index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 5\n  }, this);\n}\n_c3 = ThreadMessagesDisplay;\nexport default OneBox;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"OneBox\");\n$RefreshReg$(_c2, \"ThreadListDisplay\");\n$RefreshReg$(_c3, \"ThreadMessagesDisplay\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","ThreadDeletion","ThreadReply","ResetOneBox","jsxDEV","_jsxDEV","Fragment","_Fragment","OneBox","_s","threads","setThreads","selectedThread","setSelectedThread","threadMessages","setThreadMessages","loading","setLoading","messageLoading","setMessageLoading","error","setError","activeComponent","setActiveComponent","searchThreadId","setSearchThreadId","showReplyBox","setShowReplyBox","notification","setNotification","token","fetchThreads","console","log","config","method","url","headers","Authorization","response","data","err","status","JSON","stringify","request","message","handleReplyThread","type","handleKeyDown","e","target","tagName","key","_document$querySelect","document","querySelector","click","window","addEventListener","removeEventListener","timer","setTimeout","clearTimeout","fetchThreadMessages","threadId","maxBodyLength","Infinity","thread","find","t","subject","handleThreadSelect","handleThreadSearch","preventDefault","trim","renderActiveComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","ThreadListDisplay","onSelectThread","onClick","onDeleteStart","onDeleteSuccess","filter","onDeleteError","_error$response","_error$response$data","showConfirmation","title","onSubmit","value","onChange","placeholder","isOpen","onReplyStart","onReplySuccess","onReplyError","_error$response2","_error$response2$data","onCancel","defaultValues","ThreadMessagesDisplay","messages","onResetStart","onResetSuccess","onResetError","_error$response3","_error$response3$data","_c","map","body","substring","fromName","toEmail","id","_c2","index","from","toName","to","Date","date","toLocaleString","dangerouslySetInnerHTML","__html","_c3","$RefreshReg$"],"sources":["D:/OneDrive/Desktop/prj/intern_ass/reachinbox-assignment/src/components/OneBox.js"],"sourcesContent":["// Fix the imports - remove useRef if not needed, add useCallback\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './OneBox.css';\r\nimport ThreadDeletion from './ThreadDeletion';\r\nimport ThreadReply from './ThreadReply';\r\nimport ResetOneBox from './ResetOneBox';\r\n\r\nfunction OneBox() {\r\n  const [threads, setThreads] = useState([]);\r\n  const [selectedThread, setSelectedThread] = useState(null);\r\n  const [threadMessages, setThreadMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [messageLoading, setMessageLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeComponent, setActiveComponent] = useState('threadList');\r\n  const [searchThreadId, setSearchThreadId] = useState('');\r\n  const [showReplyBox, setShowReplyBox] = useState(false);\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  // Use the correct token that works in other components\r\n  const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImVtYWlsIjoibW9udXJhbmphbjI1MUBnbWFpbC5jb20iLCJpZCI6MTU3OSwiZmlyc3ROYW1lIjoiQmlub2QiLCJsYXN0TmFtZSI6IkJoYWkifSwiaWF0IjoxNzQ2OTgwNTkyLCJleHAiOjE3Nzg1MTY1OTJ9.DrALXAi4YICQv0USd6W0S8f4yCleWM2z5pLSM1MaE-0';\r\n\r\n  // Make the API call when the component mounts\r\n  useEffect(() => {\r\n    const fetchThreads = async () => {\r\n      try {\r\n        console.log(\"Fetching threads...\"); // Debug log\r\n        \r\n        // Use the exact same configuration as in the working getThreads.js\r\n        const config = {\r\n          method: 'get',\r\n          url: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        };\r\n        \r\n        const response = await axios(config);\r\n        \r\n        // Debug log for response\r\n        console.log(\"API Response:\", response);\r\n\r\n        if (response.data && response.data.data) {\r\n          setThreads(response.data.data);\r\n        } else {\r\n          setError('No threads found.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching threads:', err);\r\n        if (err.response) {\r\n          console.error(`Status: ${err.response.status}`);\r\n          console.error(\"Response:\", err.response.data);\r\n          setError(`Failed to fetch threads: ${err.response.status} - ${JSON.stringify(err.response.data)}`);\r\n        } else if (err.request) {\r\n          console.error(\"No response received:\", err.request);\r\n          setError('No response received from server.');\r\n        } else {\r\n          console.error(\"Error:\", err.message);\r\n          setError(`Error: ${err.message}`);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchThreads();\r\n  }, []);\r\n\r\n  // Handle reply thread action\r\n  const handleReplyThread = useCallback(() => {\r\n    setShowReplyBox(true);\r\n    setNotification({\r\n      type: 'info',\r\n      message: 'Reply box opened (Shortcut: R)'\r\n    });\r\n  }, [setShowReplyBox, setNotification]);\r\n\r\n  // Keyboard shortcuts handler with proper dependencies\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      // Only apply shortcuts when not typing in an input or textarea\r\n      if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {\r\n        return;\r\n      }\r\n\r\n      // Only apply shortcuts when in thread messages view\r\n      if (activeComponent === 'threadMessages' && selectedThread) {\r\n        if (e.key === 'd' || e.key === 'D') {\r\n          // Find and click the delete button from ThreadDeletion component\r\n          document.querySelector('.thread-delete-button')?.click();\r\n        } else if (e.key === 'r' || e.key === 'R') {\r\n          handleReplyThread();\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [activeComponent, selectedThread, handleReplyThread]);\r\n\r\n  // Auto-dismiss notification after 3 seconds\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  // Fetch messages for a specific thread\r\n  const fetchThreadMessages = async (threadId) => {\r\n    setMessageLoading(true);\r\n    setError(null); // Clear any previous errors\r\n    try {\r\n      console.log(`Fetching messages for thread ${threadId}...`);\r\n      \r\n      const config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: `https://hiring.reachinbox.xyz/api/v1/onebox/messages/${threadId}`,\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      \r\n      const response = await axios(config);\r\n      console.log(\"Thread Messages Response:\", response);\r\n\r\n      if (response.data && response.data.data) {\r\n        setThreadMessages(response.data.data);\r\n        // Find the thread in our list to set as selected\r\n        const thread = threads.find(t => t.threadId === threadId);\r\n        if (thread) {\r\n          setSelectedThread(thread);\r\n        } else {\r\n          // If thread not found in our list, create a minimal thread object\r\n          setSelectedThread({ threadId, subject: `Thread #${threadId}` });\r\n        }\r\n        setActiveComponent('threadMessages');\r\n      } else {\r\n        setError('No messages found for this thread.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching thread messages:', err);\r\n      setError(`Failed to fetch thread messages: ${err.message}`);\r\n    } finally {\r\n      setMessageLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle thread selection\r\n  const handleThreadSelect = (thread) => {\r\n    setSelectedThread(thread);\r\n    fetchThreadMessages(thread.threadId);\r\n  };\r\n\r\n  // Handle thread ID search\r\n  const handleThreadSearch = (e) => {\r\n    e.preventDefault();\r\n    if (searchThreadId.trim()) {\r\n      fetchThreadMessages(searchThreadId.trim());\r\n    }\r\n  };\r\n\r\n  // Render the active component based on state\r\n  const renderActiveComponent = () => {\r\n    if (loading && activeComponent === 'threadList') return <p>Loading threads...</p>;\r\n    if (error) return <p className=\"error-message\">Error: {error}</p>;\r\n\r\n    switch (activeComponent) {\r\n      case 'threadList':\r\n        return (\r\n          <>\r\n            <h2>Email Threads</h2>\r\n            {threads.length === 0 ? (\r\n              <p>No threads available.</p>\r\n            ) : (\r\n              <ThreadListDisplay \r\n                threads={threads} \r\n                onSelectThread={handleThreadSelect}\r\n              />\r\n            )}\r\n          </>\r\n        );\r\n      case 'threadMessages':\r\n        if (messageLoading) return <p>Loading messages...</p>;\r\n        return (\r\n          <>\r\n            <div className=\"thread-header\">\r\n              <button \r\n                className=\"back-button\" \r\n                onClick={() => {\r\n                  setActiveComponent('threadList');\r\n                  setShowReplyBox(false);\r\n                }}\r\n              >\r\n                ← Back to Threads\r\n              </button>\r\n              <h2>{selectedThread?.subject || 'Thread Messages'}</h2>\r\n              <div className=\"thread-actions\">\r\n                <ThreadDeletion \r\n                  thread={selectedThread}\r\n                  token={token}\r\n                  onDeleteStart={(thread) => {\r\n                    setNotification({\r\n                      type: 'info',\r\n                      message: `Deleting thread \"${thread.subject}\"...`\r\n                    });\r\n                  }}\r\n                  onDeleteSuccess={(thread, data) => {\r\n                    setNotification({\r\n                      type: 'success',\r\n                      message: `Thread \"${thread.subject}\" deleted successfully (Shortcut: D)`\r\n                    });\r\n                    \r\n                    // Remove the thread from the local state\r\n                    setThreads(threads => threads.filter(t => t.threadId !== thread.threadId));\r\n                    \r\n                    // Go back to thread list after deletion\r\n                    setActiveComponent('threadList');\r\n                  }}\r\n                  onDeleteError={(error, thread) => {\r\n                    setNotification({\r\n                      type: 'error',\r\n                      message: `Failed to delete thread: ${error.response?.data?.message || error.message}`\r\n                    });\r\n                  }}\r\n                  showConfirmation={true}\r\n                />\r\n                <button \r\n                  className=\"action-button reply-button\" \r\n                  onClick={handleReplyThread}\r\n                  title=\"Reply to Thread (R)\"\r\n                >\r\n                  Reply\r\n                </button>\r\n              </div>\r\n              <form onSubmit={handleThreadSearch} className=\"thread-search-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={searchThreadId}\r\n                  onChange={(e) => setSearchThreadId(e.target.value)}\r\n                  placeholder=\"Search by Thread ID\"\r\n                  className=\"thread-search-input\"\r\n                />\r\n                <button type=\"submit\" className=\"thread-search-button\">Search</button>\r\n              </form>\r\n            </div>\r\n            \r\n            <ThreadReply\r\n              thread={selectedThread}\r\n              token={token}\r\n              isOpen={showReplyBox}\r\n              onReplyStart={(thread) => {\r\n                setNotification({\r\n                  type: 'info',\r\n                  message: `Sending reply to \"${thread.subject}\"...`\r\n                });\r\n              }}\r\n              onReplySuccess={(data, thread) => {\r\n                setNotification({\r\n                  type: 'success',\r\n                  message: 'Reply sent successfully!'\r\n                });\r\n                \r\n                // Refresh the thread messages to include the new reply\r\n                fetchThreadMessages(thread.threadId);\r\n              }}\r\n              onReplyError={(error, thread) => {\r\n                setNotification({\r\n                  type: 'error',\r\n                  message: `Failed to send reply: ${error.response?.data?.message || error.message}`\r\n                });\r\n              }}\r\n              onCancel={() => setShowReplyBox(false)}\r\n              defaultValues={{\r\n                // You can pre-populate these values based on the selected thread\r\n                subject: `Re: ${selectedThread?.subject || ''}`,\r\n                // Add other default values as needed\r\n              }}\r\n            />\r\n            \r\n            {threadMessages.length === 0 ? (\r\n              <p>No messages available for this thread.</p>\r\n            ) : (\r\n              <ThreadMessagesDisplay messages={threadMessages} />\r\n            )}\r\n          </>\r\n        );\r\n      default:\r\n        return <p>Select a component from the sidebar</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"onebox-layout\">\r\n      <div className=\"onebox-sidebar\">\r\n  <h3>OneBox</h3>\r\n  <ul>\r\n    <li \r\n      className={activeComponent === 'threadList' ? 'active' : ''}\r\n      onClick={() => setActiveComponent('threadList')}\r\n    >\r\n      Thread List\r\n    </li>\r\n    <li \r\n      className={activeComponent === 'threadMessages' ? 'active' : ''}\r\n      onClick={() => {\r\n        if (selectedThread) {\r\n          setActiveComponent('threadMessages');\r\n        } else {\r\n          setActiveComponent('threadMessages');\r\n          setThreadMessages([]);\r\n        }\r\n      }}\r\n    >\r\n      Thread Messages\r\n    </li>\r\n    {/* Add more menu items here as needed */}\r\n  </ul>\r\n  \r\n  {/* Add the ResetOneBox component here */}\r\n  <div className=\"sidebar-actions\">\r\n    <ResetOneBox \r\n      token={token}\r\n      onResetStart={() => {\r\n        setNotification({\r\n          type: 'info',\r\n          message: 'Resetting OneBox data...'\r\n        });\r\n      }}\r\n      onResetSuccess={(data) => {\r\n        setNotification({\r\n          type: 'success',\r\n          message: 'OneBox data reset successfully!'\r\n        });\r\n        \r\n        // Clear thread messages\r\n        setThreadMessages([]);\r\n        \r\n        // Clear selected thread\r\n        setSelectedThread(null);\r\n        \r\n        // Go back to thread list\r\n        setActiveComponent('threadList');\r\n        \r\n        // Close reply box if open\r\n        setShowReplyBox(false);\r\n        \r\n        // Refresh the threads list\r\n        setLoading(true);\r\n        \r\n        // Fetch threads again\r\n        const fetchThreads = async () => {\r\n          try {\r\n            const config = {\r\n              method: 'get',\r\n              url: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            };\r\n            \r\n            const response = await axios(config);\r\n            \r\n            if (response.data && response.data.data) {\r\n              setThreads(response.data.data);\r\n            } else {\r\n              setError('No threads found.');\r\n            }\r\n          } catch (err) {\r\n            console.error('Error fetching threads:', err);\r\n            setError(`Failed to fetch threads: ${err.message}`);\r\n          } finally {\r\n            setLoading(false);\r\n          }\r\n        };\r\n\r\n        fetchThreads();\r\n      }}\r\n      onResetError={(error) => {\r\n        setNotification({\r\n          type: 'error',\r\n          message: `Failed to reset data: ${error.response?.data?.message || error.message}`\r\n        });\r\n      }}\r\n      showConfirmation={true}\r\n    />  \r\n      \r\n    </div>\r\n  \r\n  <div className=\"keyboard-shortcuts\">\r\n    <h4>Keyboard Shortcuts</h4>\r\n    <ul>\r\n      <li><strong>D</strong> - Delete thread</li>\r\n      <li><strong>R</strong> - Reply to thread</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n      <div className=\"onebox-main-content\">\r\n        {renderActiveComponent()}\r\n      </div>\r\n      \r\n      {notification && (\r\n        <div className={`notification ${notification.type}`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Component to display threads\r\nfunction ThreadListDisplay({ threads, onSelectThread }) {\r\n  return (\r\n    <div className=\"threads-list\">\r\n      {threads.map((thread) => (\r\n        <div \r\n          key={thread.id || thread.threadId} \r\n          className=\"thread-card\"\r\n          onClick={() => onSelectThread(thread)}\r\n        >\r\n          <h3>{thread.subject || 'No Subject'}</h3>\r\n          <p>{thread.body ? thread.body.substring(0, 100) + '...' : 'No body available'}</p>\r\n          <p><strong>Thread ID:</strong> {thread.threadId}</p>\r\n          {thread.fromName && <p><strong>From:</strong> {thread.fromName}</p>}\r\n          {thread.toEmail && <p><strong>To:</strong> {thread.toEmail}</p>}\r\n          <div className=\"view-thread\">View Messages →</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Component to display thread messages\r\nfunction ThreadMessagesDisplay({ messages }) {\r\n  return (\r\n    <div className=\"thread-messages\">\r\n      {messages.map((message, index) => (\r\n        <div key={message.id || index} className=\"message-card\">\r\n          <div className=\"message-header\">\r\n            <div className=\"message-from\">\r\n              <strong>From:</strong> {message.fromName || message.from || 'Unknown'}\r\n            </div>\r\n            <div className=\"message-to\">\r\n              <strong>To:</strong> {message.toName || message.to || 'Unknown'}\r\n            </div>\r\n            <div className=\"message-date\">\r\n              {new Date(message.date).toLocaleString()}\r\n            </div>\r\n          </div>\r\n          <div className=\"message-subject\">\r\n            <strong>Subject:</strong> {message.subject || 'No Subject'}\r\n          </div>\r\n          <div \r\n            className=\"message-body\"\r\n            dangerouslySetInnerHTML={{ __html: message.body || 'No content' }}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OneBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}