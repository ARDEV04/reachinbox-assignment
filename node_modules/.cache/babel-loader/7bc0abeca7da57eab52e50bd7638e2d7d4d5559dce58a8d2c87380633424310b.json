{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Desktop\\\\prj\\\\intern_ass\\\\reachinbox-assignment\\\\src\\\\components\\\\OneBox.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport './OneBox.css';\nimport ThreadDeletion from './ThreadDeletion';\nimport ResetOneBox from './ResetOneBox';\nimport ThreadReply from './ThreadReply';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OneBox() {\n  _s();\n  const [threads, setThreads] = useState([]);\n  const [selectedThread, setSelectedThread] = useState(null);\n  const [threadMessages, setThreadMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [messageLoading, setMessageLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeComponent, setActiveComponent] = useState('threadList');\n  const [searchThreadId, setSearchThreadId] = useState('');\n  const [showReplyBox, setShowReplyBox] = useState(false);\n  const [notification, setNotification] = useState(null);\n\n  // Use the correct token that works in other components\n  const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImVtYWlsIjoibW9udXJhbmphbjI1MUBnbWFpbC5jb20iLCJpZCI6MTU3OSwiZmlyc3ROYW1lIjoiQmlub2QiLCJsYXN0TmFtZSI6IkJoYWkifSwiaWF0IjoxNzQ2OTgwNTkyLCJleHAiOjE3Nzg1MTY1OTJ9.DrALXAi4YICQv0USd6W0S8f4yCleWM2z5pLSM1MaE-0';\n\n  // Make the API call when the component mounts\n  useEffect(() => {\n    const fetchThreads = async () => {\n      try {\n        console.log(\"Fetching threads...\"); // Debug log\n\n        // Use the exact same configuration as in the working getThreads.js\n        const config = {\n          method: 'get',\n          url: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        };\n        const response = await axios(config);\n\n        // Debug log for response\n        console.log(\"API Response:\", response);\n        if (response.data && response.data.data) {\n          setThreads(response.data.data);\n        } else {\n          setError('No threads found.');\n        }\n      } catch (err) {\n        console.error('Error fetching threads:', err);\n        if (err.response) {\n          console.error(`Status: ${err.response.status}`);\n          console.error(\"Response:\", err.response.data);\n          setError(`Failed to fetch threads: ${err.response.status} - ${JSON.stringify(err.response.data)}`);\n        } else if (err.request) {\n          console.error(\"No response received:\", err.request);\n          setError('No response received from server.');\n        } else {\n          console.error(\"Error:\", err.message);\n          setError(`Error: ${err.message}`);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchThreads();\n  }, []);\n\n  // Keyboard shortcuts handler\n  useEffect(() => {\n    const handleKeyDown = e => {\n      // Only apply shortcuts when not typing in an input or textarea\n      if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {\n        return;\n      }\n\n      // Only apply shortcuts when in thread messages view\n      if (activeComponent === 'threadMessages' && selectedThread) {\n        if (e.key === 'd' || e.key === 'D') {\n          handleDeleteThread();\n        } else if (e.key === 'r' || e.key === 'R') {\n          handleReplyThread();\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [activeComponent, selectedThread]);\n\n  // Focus on reply box when it opens\n\n  // Auto-dismiss notification after 3 seconds\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // Fetch messages for a specific thread\n  const fetchThreadMessages = async threadId => {\n    setMessageLoading(true);\n    setError(null); // Clear any previous errors\n    try {\n      console.log(`Fetching messages for thread ${threadId}...`);\n      const config = {\n        method: 'get',\n        maxBodyLength: Infinity,\n        url: `https://hiring.reachinbox.xyz/api/v1/onebox/messages/${threadId}`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios(config);\n      console.log(\"Thread Messages Response:\", response);\n      if (response.data && response.data.data) {\n        setThreadMessages(response.data.data);\n        // Find the thread in our list to set as selected\n        const thread = threads.find(t => t.threadId === threadId);\n        if (thread) {\n          setSelectedThread(thread);\n        } else {\n          // If thread not found in our list, create a minimal thread object\n          setSelectedThread({\n            threadId,\n            subject: `Thread #${threadId}`\n          });\n        }\n        setActiveComponent('threadMessages');\n      } else {\n        setError('No messages found for this thread.');\n      }\n    } catch (err) {\n      console.error('Error fetching thread messages:', err);\n      setError(`Failed to fetch thread messages: ${err.message}`);\n    } finally {\n      setMessageLoading(false);\n    }\n  };\n\n  // Handle thread selection\n  const handleThreadSelect = thread => {\n    setSelectedThread(thread);\n    fetchThreadMessages(thread.threadId);\n  };\n\n  // Handle thread ID search\n  const handleThreadSearch = e => {\n    e.preventDefault();\n    if (searchThreadId.trim()) {\n      fetchThreadMessages(searchThreadId.trim());\n    }\n  };\n\n  // Handle delete thread action\n  const handleDeleteThread = () => {\n    // In a real app, you would make an API call to delete the thread\n    // For now, we'll just show a notification\n    setNotification({\n      type: 'info',\n      message: `Thread \"${selectedThread.subject}\" marked for deletion (Shortcut: D)`\n    });\n    console.log(`Delete thread: ${selectedThread.threadId}`);\n    // Simulate deletion by removing from the threads list\n    setThreads(threads.filter(t => t.threadId !== selectedThread.threadId));\n    // Go back to thread list after deletion\n    setActiveComponent('threadList');\n  };\n\n  // Handle reply thread action\n  const handleReplyThread = useCallback(() => {\n    setShowReplyBox(true);\n    setNotification({\n      type: 'info',\n      message: 'Reply box opened (Shortcut: R)'\n    });\n  }, [setShowReplyBox, setNotification]);\n\n  // Render the active component based on state\n  const renderActiveComponent = () => {\n    if (loading && activeComponent === 'threadList') return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading threads...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 61\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 23\n    }, this);\n    switch (activeComponent) {\n      case 'threadList':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Email Threads\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), threads.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No threads available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ThreadListDisplay, {\n            threads: threads,\n            onSelectThread: handleThreadSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      case 'threadMessages':\n        if (messageLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 36\n        }, this);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"thread-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back-button\",\n              onClick: () => {\n                setActiveComponent('threadList');\n                setShowReplyBox(false);\n              },\n              children: \"\\u2190 Back to Threads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: (selectedThread === null || selectedThread === void 0 ? void 0 : selectedThread.subject) || 'Thread Messages'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"thread-actions\",\n              children: [/*#__PURE__*/_jsxDEV(ThreadDeletion, {\n                thread: selectedThread,\n                token: token,\n                onDeleteStart: thread => {\n                  setNotification({\n                    type: 'info',\n                    message: `Deleting thread \"${thread.subject}\"...`\n                  });\n                },\n                onDeleteSuccess: (thread, data) => {\n                  setNotification({\n                    type: 'success',\n                    message: `Thread \"${thread.subject}\" deleted successfully (Shortcut: D)`\n                  });\n\n                  // Remove the thread from the local state\n                  setThreads(threads => threads.filter(t => t.threadId !== thread.threadId));\n\n                  // Go back to thread list after deletion\n                  setActiveComponent('threadList');\n                },\n                onDeleteError: (error, thread) => {\n                  var _error$response, _error$response$data;\n                  setNotification({\n                    type: 'error',\n                    message: `Failed to delete thread: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`\n                  });\n                },\n                showConfirmation: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button reply-button\",\n                onClick: handleReplyThread,\n                title: \"Reply to Thread (R)\",\n                children: \"Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleThreadSearch,\n              className: \"thread-search-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: searchThreadId,\n                onChange: e => setSearchThreadId(e.target.value),\n                placeholder: \"Search by Thread ID\",\n                className: \"thread-search-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"thread-search-button\",\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ThreadReply, {\n            thread: selectedThread,\n            token: token,\n            isOpen: showReplyBox,\n            onReplyStart: thread => {\n              setNotification({\n                type: 'info',\n                message: `Sending reply to \"${thread.subject}\"...`\n              });\n            },\n            onReplySuccess: (data, thread) => {\n              setNotification({\n                type: 'success',\n                message: 'Reply sent successfully!'\n              });\n\n              // Refresh the thread messages to include the new reply\n              fetchThreadMessages(thread.threadId);\n            },\n            onReplyError: (error, thread) => {\n              var _error$response2, _error$response2$data;\n              setNotification({\n                type: 'error',\n                message: `Failed to send reply: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`\n              });\n            },\n            onCancel: () => setShowReplyBox(false),\n            defaultValues: {\n              // You can pre-populate these values based on the selected thread\n              subject: `Re: ${(selectedThread === null || selectedThread === void 0 ? void 0 : selectedThread.subject) || ''}`\n              // Add other default values as needed\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), threadMessages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No messages available for this thread.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ThreadMessagesDisplay, {\n            messages: threadMessages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a component from the sidebar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"onebox-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"onebox-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"OneBox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: activeComponent === 'threadList' ? 'active' : '',\n          onClick: () => setActiveComponent('threadList'),\n          children: \"Thread List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: activeComponent === 'threadMessages' ? 'active' : '',\n          onClick: () => {\n            if (selectedThread) {\n              setActiveComponent('threadMessages');\n            } else {\n              setActiveComponent('threadMessages');\n              setThreadMessages([]);\n            }\n          },\n          children: \"Thread Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-actions\",\n        children: /*#__PURE__*/_jsxDEV(ResetOneBox, {\n          token: token,\n          onResetStart: () => {\n            setNotification({\n              type: 'info',\n              message: 'Resetting OneBox data...'\n            });\n          },\n          onResetSuccess: data => {\n            setNotification({\n              type: 'success',\n              message: 'OneBox data reset successfully!'\n            });\n\n            // Refresh the threads list\n            setLoading(true);\n            setActiveComponent('threadList');\n\n            // Fetch threads again\n            const fetchThreads = async () => {\n              try {\n                const config = {\n                  method: 'get',\n                  url: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\n                  headers: {\n                    Authorization: `Bearer ${token}`\n                  }\n                };\n                const response = await axios(config);\n                if (response.data && response.data.data) {\n                  setThreads(response.data.data);\n                } else {\n                  setError('No threads found.');\n                }\n              } catch (err) {\n                console.error('Error fetching threads:', err);\n                setError(`Failed to fetch threads: ${err.message}`);\n              } finally {\n                setLoading(false);\n              }\n            };\n            fetchThreads();\n          },\n          onResetError: error => {\n            var _error$response3, _error$response3$data;\n            setNotification({\n              type: 'error',\n              message: `Failed to reset data: ${((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message}`\n            });\n          },\n          showConfirmation: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyboard-shortcuts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Keyboard Shortcuts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this), \" - Delete thread\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), \" - Reply to thread\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"onebox-main-content\",\n      children: renderActiveComponent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification ${notification.type}`,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n}\n\n// Component to display threads\n_s(OneBox, \"LkzjPakD79afxJx1ZE9oGNOv1Ps=\");\n_c = OneBox;\nfunction ThreadListDisplay({\n  threads,\n  onSelectThread\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"threads-list\",\n    children: threads.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-card\",\n      onClick: () => onSelectThread(thread),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: thread.subject || 'No Subject'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: thread.body ? thread.body.substring(0, 100) + '...' : 'No body available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Thread ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 14\n        }, this), \" \", thread.threadId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this), thread.fromName && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"From:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 34\n        }, this), \" \", thread.fromName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 31\n      }, this), thread.toEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"To:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 33\n        }, this), \" \", thread.toEmail]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-thread\",\n        children: \"View Messages \\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }, this)]\n    }, thread.id || thread.threadId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 424,\n    columnNumber: 5\n  }, this);\n}\n\n// Component to display thread messages\n_c2 = ThreadListDisplay;\nfunction ThreadMessagesDisplay({\n  messages\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thread-messages\",\n    children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-from\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"From:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this), \" \", message.fromName || message.fromEmail || 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-date\",\n          children: new Date(message.date).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-subject\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Subject:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this), \" \", message.subject || 'No Subject']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-body\",\n        children: message.body || 'No content available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, this), message.attachments && message.attachments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-attachments\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Attachments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: message.attachments.map((attachment, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: attachment.filename || `Attachment ${i + 1}`\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 13\n      }, this)]\n    }, message.id || index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 446,\n    columnNumber: 5\n  }, this);\n}\n_c3 = ThreadMessagesDisplay;\nexport default OneBox;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"OneBox\");\n$RefreshReg$(_c2, \"ThreadListDisplay\");\n$RefreshReg$(_c3, \"ThreadMessagesDisplay\");","map":{"version":3,"names":["useEffect","useState","useRef","axios","ThreadDeletion","ResetOneBox","ThreadReply","jsxDEV","_jsxDEV","Fragment","_Fragment","OneBox","_s","threads","setThreads","selectedThread","setSelectedThread","threadMessages","setThreadMessages","loading","setLoading","messageLoading","setMessageLoading","error","setError","activeComponent","setActiveComponent","searchThreadId","setSearchThreadId","showReplyBox","setShowReplyBox","notification","setNotification","token","fetchThreads","console","log","config","method","url","headers","Authorization","response","data","err","status","JSON","stringify","request","message","handleKeyDown","e","target","tagName","key","handleDeleteThread","handleReplyThread","window","addEventListener","removeEventListener","timer","setTimeout","clearTimeout","fetchThreadMessages","threadId","maxBodyLength","Infinity","thread","find","t","subject","handleThreadSelect","handleThreadSearch","preventDefault","trim","type","filter","useCallback","renderActiveComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","ThreadListDisplay","onSelectThread","onClick","onDeleteStart","onDeleteSuccess","onDeleteError","_error$response","_error$response$data","showConfirmation","title","onSubmit","value","onChange","placeholder","isOpen","onReplyStart","onReplySuccess","onReplyError","_error$response2","_error$response2$data","onCancel","defaultValues","ThreadMessagesDisplay","messages","onResetStart","onResetSuccess","onResetError","_error$response3","_error$response3$data","_c","map","body","substring","fromName","toEmail","id","_c2","index","fromEmail","Date","date","toLocaleString","attachments","attachment","i","filename","_c3","$RefreshReg$"],"sources":["D:/OneDrive/Desktop/prj/intern_ass/reachinbox-assignment/src/components/OneBox.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './OneBox.css';\r\nimport ThreadDeletion from './ThreadDeletion';\r\nimport ResetOneBox from './ResetOneBox';\r\nimport ThreadReply from './ThreadReply';\r\n\r\nfunction OneBox() {\r\n  const [threads, setThreads] = useState([]);\r\n  const [selectedThread, setSelectedThread] = useState(null);\r\n  const [threadMessages, setThreadMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [messageLoading, setMessageLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeComponent, setActiveComponent] = useState('threadList');\r\n  const [searchThreadId, setSearchThreadId] = useState('');\r\n  const [showReplyBox, setShowReplyBox] = useState(false);\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  // Use the correct token that works in other components\r\n  const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImVtYWlsIjoibW9udXJhbmphbjI1MUBnbWFpbC5jb20iLCJpZCI6MTU3OSwiZmlyc3ROYW1lIjoiQmlub2QiLCJsYXN0TmFtZSI6IkJoYWkifSwiaWF0IjoxNzQ2OTgwNTkyLCJleHAiOjE3Nzg1MTY1OTJ9.DrALXAi4YICQv0USd6W0S8f4yCleWM2z5pLSM1MaE-0';\r\n\r\n  // Make the API call when the component mounts\r\n  useEffect(() => {\r\n    const fetchThreads = async () => {\r\n      try {\r\n        console.log(\"Fetching threads...\"); // Debug log\r\n        \r\n        // Use the exact same configuration as in the working getThreads.js\r\n        const config = {\r\n          method: 'get',\r\n          url: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        };\r\n        \r\n        const response = await axios(config);\r\n        \r\n        // Debug log for response\r\n        console.log(\"API Response:\", response);\r\n\r\n        if (response.data && response.data.data) {\r\n          setThreads(response.data.data);\r\n        } else {\r\n          setError('No threads found.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching threads:', err);\r\n        if (err.response) {\r\n          console.error(`Status: ${err.response.status}`);\r\n          console.error(\"Response:\", err.response.data);\r\n          setError(`Failed to fetch threads: ${err.response.status} - ${JSON.stringify(err.response.data)}`);\r\n        } else if (err.request) {\r\n          console.error(\"No response received:\", err.request);\r\n          setError('No response received from server.');\r\n        } else {\r\n          console.error(\"Error:\", err.message);\r\n          setError(`Error: ${err.message}`);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchThreads();\r\n  }, []);\r\n\r\n  // Keyboard shortcuts handler\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      // Only apply shortcuts when not typing in an input or textarea\r\n      if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {\r\n        return;\r\n      }\r\n\r\n      // Only apply shortcuts when in thread messages view\r\n      if (activeComponent === 'threadMessages' && selectedThread) {\r\n        if (e.key === 'd' || e.key === 'D') {\r\n          handleDeleteThread();\r\n        } else if (e.key === 'r' || e.key === 'R') {\r\n          handleReplyThread();\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [activeComponent, selectedThread]);\r\n\r\n  // Focus on reply box when it opens\r\n\r\n  // Auto-dismiss notification after 3 seconds\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  \r\n  // Fetch messages for a specific thread\r\n  const fetchThreadMessages = async (threadId) => {\r\n    setMessageLoading(true);\r\n    setError(null); // Clear any previous errors\r\n    try {\r\n      console.log(`Fetching messages for thread ${threadId}...`);\r\n      \r\n      const config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: `https://hiring.reachinbox.xyz/api/v1/onebox/messages/${threadId}`,\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      \r\n      const response = await axios(config);\r\n      console.log(\"Thread Messages Response:\", response);\r\n\r\n      if (response.data && response.data.data) {\r\n        setThreadMessages(response.data.data);\r\n        // Find the thread in our list to set as selected\r\n        const thread = threads.find(t => t.threadId === threadId);\r\n        if (thread) {\r\n          setSelectedThread(thread);\r\n        } else {\r\n          // If thread not found in our list, create a minimal thread object\r\n          setSelectedThread({ threadId, subject: `Thread #${threadId}` });\r\n        }\r\n        setActiveComponent('threadMessages');\r\n      } else {\r\n        setError('No messages found for this thread.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching thread messages:', err);\r\n      setError(`Failed to fetch thread messages: ${err.message}`);\r\n    } finally {\r\n      setMessageLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle thread selection\r\n  const handleThreadSelect = (thread) => {\r\n    setSelectedThread(thread);\r\n    fetchThreadMessages(thread.threadId);\r\n  };\r\n\r\n  // Handle thread ID search\r\n  const handleThreadSearch = (e) => {\r\n    e.preventDefault();\r\n    if (searchThreadId.trim()) {\r\n      fetchThreadMessages(searchThreadId.trim());\r\n    }\r\n  };\r\n\r\n  // Handle delete thread action\r\n  const handleDeleteThread = () => {\r\n    // In a real app, you would make an API call to delete the thread\r\n    // For now, we'll just show a notification\r\n    setNotification({\r\n      type: 'info',\r\n      message: `Thread \"${selectedThread.subject}\" marked for deletion (Shortcut: D)`\r\n    });\r\n    \r\n    console.log(`Delete thread: ${selectedThread.threadId}`);\r\n    // Simulate deletion by removing from the threads list\r\n    setThreads(threads.filter(t => t.threadId !== selectedThread.threadId));\r\n    // Go back to thread list after deletion\r\n    setActiveComponent('threadList');\r\n  };\r\n\r\n  // Handle reply thread action\r\n  const handleReplyThread = useCallback(() => {\r\n    setShowReplyBox(true);\r\n    setNotification({\r\n      type: 'info',\r\n      message: 'Reply box opened (Shortcut: R)'\r\n    });\r\n  }, [setShowReplyBox, setNotification]);\r\n\r\n\r\n  // Render the active component based on state\r\n  const renderActiveComponent = () => {\r\n    if (loading && activeComponent === 'threadList') return <p>Loading threads...</p>;\r\n    if (error) return <p className=\"error-message\">Error: {error}</p>;\r\n\r\n    switch (activeComponent) {\r\n      case 'threadList':\r\n        return (\r\n          <>\r\n            <h2>Email Threads</h2>\r\n            {threads.length === 0 ? (\r\n              <p>No threads available.</p>\r\n            ) : (\r\n              <ThreadListDisplay \r\n                threads={threads} \r\n                onSelectThread={handleThreadSelect}\r\n              />\r\n            )}\r\n          </>\r\n        );\r\n      case 'threadMessages':\r\n        if (messageLoading) return <p>Loading messages...</p>;\r\n        return (\r\n          <>\r\n            <div className=\"thread-header\">\r\n              <button \r\n                className=\"back-button\" \r\n                onClick={() => {\r\n                  setActiveComponent('threadList');\r\n                  setShowReplyBox(false);\r\n                }}\r\n              >\r\n                ← Back to Threads\r\n              </button>\r\n              <h2>{selectedThread?.subject || 'Thread Messages'}</h2>\r\n              <div className=\"thread-actions\">\r\n                <ThreadDeletion \r\n                  thread={selectedThread}\r\n                  token={token}\r\n                  onDeleteStart={(thread) => {\r\n                    setNotification({\r\n                      type: 'info',\r\n                      message: `Deleting thread \"${thread.subject}\"...`\r\n                    });\r\n                  }}\r\n                  onDeleteSuccess={(thread, data) => {\r\n                    setNotification({\r\n                      type: 'success',\r\n                      message: `Thread \"${thread.subject}\" deleted successfully (Shortcut: D)`\r\n                    });\r\n                    \r\n                    // Remove the thread from the local state\r\n                    setThreads(threads => threads.filter(t => t.threadId !== thread.threadId));\r\n                    \r\n                    // Go back to thread list after deletion\r\n                    setActiveComponent('threadList');\r\n                  }}\r\n                  onDeleteError={(error, thread) => {\r\n                    setNotification({\r\n                      type: 'error',\r\n                      message: `Failed to delete thread: ${error.response?.data?.message || error.message}`\r\n                    });\r\n                  }}\r\n                  showConfirmation={true}\r\n                />\r\n                <button \r\n                  className=\"action-button reply-button\" \r\n                  onClick={handleReplyThread}\r\n                  title=\"Reply to Thread (R)\"\r\n                >\r\n                  Reply\r\n                </button>\r\n              </div>\r\n              <form onSubmit={handleThreadSearch} className=\"thread-search-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={searchThreadId}\r\n                  onChange={(e) => setSearchThreadId(e.target.value)}\r\n                  placeholder=\"Search by Thread ID\"\r\n                  className=\"thread-search-input\"\r\n                />\r\n                <button type=\"submit\" className=\"thread-search-button\">Search</button>\r\n              </form>\r\n            </div>\r\n            \r\n            <ThreadReply\r\n  thread={selectedThread}\r\n  token={token}\r\n  isOpen={showReplyBox}\r\n  onReplyStart={(thread) => {\r\n    setNotification({\r\n      type: 'info',\r\n      message: `Sending reply to \"${thread.subject}\"...`\r\n    });\r\n  }}\r\n  onReplySuccess={(data, thread) => {\r\n    setNotification({\r\n      type: 'success',\r\n      message: 'Reply sent successfully!'\r\n    });\r\n    \r\n    // Refresh the thread messages to include the new reply\r\n    fetchThreadMessages(thread.threadId);\r\n  }}\r\n  onReplyError={(error, thread) => {\r\n    setNotification({\r\n      type: 'error',\r\n      message: `Failed to send reply: ${error.response?.data?.message || error.message}`\r\n    });\r\n  }}\r\n  onCancel={() => setShowReplyBox(false)}\r\n  defaultValues={{\r\n    // You can pre-populate these values based on the selected thread\r\n    subject: `Re: ${selectedThread?.subject || ''}`,\r\n    // Add other default values as needed\r\n  }}\r\n/>\r\n\r\n            \r\n            {threadMessages.length === 0 ? (\r\n              <p>No messages available for this thread.</p>\r\n            ) : (\r\n              <ThreadMessagesDisplay messages={threadMessages} />\r\n            )}\r\n          </>\r\n        );\r\n      default:\r\n        return <p>Select a component from the sidebar</p>;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"onebox-layout\">\r\n      <div className=\"onebox-sidebar\">\r\n        <h3>OneBox</h3>\r\n        <ul>\r\n          <li \r\n            className={activeComponent === 'threadList' ? 'active' : ''}\r\n            onClick={() => setActiveComponent('threadList')}\r\n          >\r\n            Thread List\r\n          </li>\r\n          <li \r\n            className={activeComponent === 'threadMessages' ? 'active' : ''}\r\n            onClick={() => {\r\n              if (selectedThread) {\r\n                setActiveComponent('threadMessages');\r\n              } else {\r\n                setActiveComponent('threadMessages');\r\n                setThreadMessages([]);\r\n              }\r\n            }}\r\n          >\r\n            Thread Messages\r\n          </li>\r\n        </ul>\r\n        \r\n        <div className=\"sidebar-actions\">\r\n          <ResetOneBox \r\n            token={token}\r\n            onResetStart={() => {\r\n              setNotification({\r\n                type: 'info',\r\n                message: 'Resetting OneBox data...'\r\n              });\r\n            }}\r\n            onResetSuccess={(data) => {\r\n              setNotification({\r\n                type: 'success',\r\n                message: 'OneBox data reset successfully!'\r\n              });\r\n              \r\n              // Refresh the threads list\r\n              setLoading(true);\r\n              setActiveComponent('threadList');\r\n              \r\n              // Fetch threads again\r\n              const fetchThreads = async () => {\r\n                try {\r\n                  const config = {\r\n                    method: 'get',\r\n                    url: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\r\n                    headers: {\r\n                      Authorization: `Bearer ${token}`,\r\n                    },\r\n                  };\r\n                  \r\n                  const response = await axios(config);\r\n                  \r\n                  if (response.data && response.data.data) {\r\n                    setThreads(response.data.data);\r\n                  } else {\r\n                    setError('No threads found.');\r\n                  }\r\n                } catch (err) {\r\n                  console.error('Error fetching threads:', err);\r\n                  setError(`Failed to fetch threads: ${err.message}`);\r\n                } finally {\r\n                  setLoading(false);\r\n                }\r\n              };\r\n\r\n              fetchThreads();\r\n            }}\r\n            onResetError={(error) => {\r\n              setNotification({\r\n                type: 'error',\r\n                message: `Failed to reset data: ${error.response?.data?.message || error.message}`\r\n              });\r\n            }}\r\n            showConfirmation={true}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"keyboard-shortcuts\">\r\n          <h4>Keyboard Shortcuts</h4>\r\n          <ul>\r\n            <li><strong>D</strong> - Delete thread</li>\r\n            <li><strong>R</strong> - Reply to thread</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"onebox-main-content\">\r\n        {renderActiveComponent()}\r\n      </div>\r\n      \r\n      {notification && (\r\n        <div className={`notification ${notification.type}`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Component to display threads\r\nfunction ThreadListDisplay({ threads, onSelectThread }) {\r\n  return (\r\n    <div className=\"threads-list\">\r\n      {threads.map((thread) => (\r\n        <div \r\n          key={thread.id || thread.threadId} \r\n          className=\"thread-card\"\r\n          onClick={() => onSelectThread(thread)}\r\n        >\r\n          <h3>{thread.subject || 'No Subject'}</h3>\r\n          <p>{thread.body ? thread.body.substring(0, 100) + '...' : 'No body available'}</p>\r\n          <p><strong>Thread ID:</strong> {thread.threadId}</p>\r\n          {thread.fromName && <p><strong>From:</strong> {thread.fromName}</p>}\r\n          {thread.toEmail && <p><strong>To:</strong> {thread.toEmail}</p>}\r\n          <div className=\"view-thread\">View Messages →</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Component to display thread messages\r\nfunction ThreadMessagesDisplay({ messages }) {\r\n  return (\r\n    <div className=\"thread-messages\">\r\n      {messages.map((message, index) => (\r\n        <div key={message.id || index} className=\"message-card\">\r\n          <div className=\"message-header\">\r\n            <div className=\"message-from\">\r\n              <strong>From:</strong> {message.fromName || message.fromEmail || 'Unknown'}\r\n            </div>\r\n            <div className=\"message-date\">\r\n              {new Date(message.date).toLocaleString()}\r\n            </div>\r\n          </div>\r\n          <div className=\"message-subject\">\r\n            <strong>Subject:</strong> {message.subject || 'No Subject'}\r\n          </div>\r\n          <div className=\"message-body\">\r\n            {message.body || 'No content available'}\r\n          </div>\r\n          {message.attachments && message.attachments.length > 0 && (\r\n            <div className=\"message-attachments\">\r\n              <strong>Attachments:</strong>\r\n              <ul>\r\n                {message.attachments.map((attachment, i) => (\r\n                  <li key={i}>{attachment.filename || `Attachment ${i+1}`}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OneBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}