{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'./ThreadDeletion.css';/**\r\n * ThreadDeletion component - Handles the deletion of email threads\r\n * \r\n * @param {Object} props - Component props\r\n * @param {Object} props.thread - The thread to be deleted\r\n * @param {string} props.token - Authentication token\r\n * @param {Function} props.onDeleteSuccess - Callback function when deletion is successful\r\n * @param {Function} props.onDeleteError - Callback function when deletion fails\r\n * @param {Function} props.onDeleteStart - Callback function when deletion starts\r\n * @param {boolean} props.showConfirmation - Whether to show a confirmation dialog before deletion\r\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ThreadDeletion=_ref=>{let{thread,token,onDeleteSuccess,onDeleteError,onDeleteStart,showConfirmation=true}=_ref;const[isDeleting,setIsDeleting]=useState(false);const[showConfirmDialog,setShowConfirmDialog]=useState(false);// Function to handle the deletion process\nconst handleDelete=async()=>{if(!thread||!thread.threadId){console.error('No thread or thread ID provided for deletion');if(onDeleteError){onDeleteError(new Error('No thread or thread ID provided for deletion'));}return;}// If confirmation is required and dialog is not shown yet, show it\nif(showConfirmation&&!showConfirmDialog){setShowConfirmDialog(true);return;}// Reset confirmation dialog if it was shown\nsetShowConfirmDialog(false);// Set deleting state\nsetIsDeleting(true);// Call the onDeleteStart callback if provided\nif(onDeleteStart){onDeleteStart(thread);}try{// Make the API call to delete the thread\nconst config={method:'delete',maxBodyLength:Infinity,url:`https://hiring.reachinbox.xyz/api/v1/onebox/messages/${thread.threadId}`,headers:{'Authorization':`Bearer ${token}`}};const response=await axios.request(config);console.log(\"Delete response:\",JSON.stringify(response.data));// Call the onDeleteSuccess callback if provided\nif(onDeleteSuccess){onDeleteSuccess(thread,response.data);}}catch(error){console.error(\"Error deleting thread:\",error);// Call the onDeleteError callback if provided\nif(onDeleteError){onDeleteError(error,thread);}}finally{setIsDeleting(false);}};// Function to cancel deletion (close confirmation dialog)\nconst cancelDelete=()=>{setShowConfirmDialog(false);};// Render confirmation dialog if needed\nif(showConfirmDialog){return/*#__PURE__*/_jsxs(\"div\",{className:\"thread-deletion-confirmation\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Are you sure you want to delete this thread?\"}),/*#__PURE__*/_jsx(\"p\",{className:\"thread-subject\",children:thread.subject||'No Subject'}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"cancel-button\",onClick:cancelDelete,disabled:isDeleting,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"confirm-button\",onClick:handleDelete,disabled:isDeleting,children:isDeleting?'Deleting...':'Confirm Delete'})]})]});}// Render delete button\nreturn/*#__PURE__*/_jsx(\"button\",{className:`thread-delete-button ${isDeleting?'deleting':''}`,onClick:handleDelete,disabled:isDeleting,title:\"Delete Thread (D)\",children:isDeleting?'Deleting...':'Delete'});};export default ThreadDeletion;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","ThreadDeletion","_ref","thread","token","onDeleteSuccess","onDeleteError","onDeleteStart","showConfirmation","isDeleting","setIsDeleting","showConfirmDialog","setShowConfirmDialog","handleDelete","threadId","console","error","Error","config","method","maxBodyLength","Infinity","url","headers","response","request","log","JSON","stringify","data","cancelDelete","className","children","subject","onClick","disabled","title"],"sources":["D:/OneDrive/Desktop/prj/intern_ass/reachinbox-assignment/src/components/ThreadDeletion.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ThreadDeletion.css';\r\n\r\n/**\r\n * ThreadDeletion component - Handles the deletion of email threads\r\n * \r\n * @param {Object} props - Component props\r\n * @param {Object} props.thread - The thread to be deleted\r\n * @param {string} props.token - Authentication token\r\n * @param {Function} props.onDeleteSuccess - Callback function when deletion is successful\r\n * @param {Function} props.onDeleteError - Callback function when deletion fails\r\n * @param {Function} props.onDeleteStart - Callback function when deletion starts\r\n * @param {boolean} props.showConfirmation - Whether to show a confirmation dialog before deletion\r\n */\r\nconst ThreadDeletion = ({ \r\n  thread, \r\n  token, \r\n  onDeleteSuccess, \r\n  onDeleteError, \r\n  onDeleteStart,\r\n  showConfirmation = true \r\n}) => {\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\r\n\r\n  // Function to handle the deletion process\r\n  const handleDelete = async () => {\r\n    if (!thread || !thread.threadId) {\r\n      console.error('No thread or thread ID provided for deletion');\r\n      if (onDeleteError) {\r\n        onDeleteError(new Error('No thread or thread ID provided for deletion'));\r\n      }\r\n      return;\r\n    }\r\n\r\n    // If confirmation is required and dialog is not shown yet, show it\r\n    if (showConfirmation && !showConfirmDialog) {\r\n      setShowConfirmDialog(true);\r\n      return;\r\n    }\r\n\r\n    // Reset confirmation dialog if it was shown\r\n    setShowConfirmDialog(false);\r\n    \r\n    // Set deleting state\r\n    setIsDeleting(true);\r\n    \r\n    // Call the onDeleteStart callback if provided\r\n    if (onDeleteStart) {\r\n      onDeleteStart(thread);\r\n    }\r\n    \r\n    try {\r\n      // Make the API call to delete the thread\r\n      const config = {\r\n        method: 'delete',\r\n        maxBodyLength: Infinity,\r\n        url: `https://hiring.reachinbox.xyz/api/v1/onebox/messages/${thread.threadId}`,\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      };\r\n      \r\n      const response = await axios.request(config);\r\n      console.log(\"Delete response:\", JSON.stringify(response.data));\r\n      \r\n      // Call the onDeleteSuccess callback if provided\r\n      if (onDeleteSuccess) {\r\n        onDeleteSuccess(thread, response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting thread:\", error);\r\n      \r\n      // Call the onDeleteError callback if provided\r\n      if (onDeleteError) {\r\n        onDeleteError(error, thread);\r\n      }\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  // Function to cancel deletion (close confirmation dialog)\r\n  const cancelDelete = () => {\r\n    setShowConfirmDialog(false);\r\n  };\r\n\r\n  // Render confirmation dialog if needed\r\n  if (showConfirmDialog) {\r\n    return (\r\n      <div className=\"thread-deletion-confirmation\">\r\n        <p>Are you sure you want to delete this thread?</p>\r\n        <p className=\"thread-subject\">{thread.subject || 'No Subject'}</p>\r\n        <div className=\"confirmation-actions\">\r\n          <button \r\n            className=\"cancel-button\" \r\n            onClick={cancelDelete}\r\n            disabled={isDeleting}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button \r\n            className=\"confirm-button\" \r\n            onClick={handleDelete}\r\n            disabled={isDeleting}\r\n          >\r\n            {isDeleting ? 'Deleting...' : 'Confirm Delete'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Render delete button\r\n  return (\r\n    <button \r\n      className={`thread-delete-button ${isDeleting ? 'deleting' : ''}`}\r\n      onClick={handleDelete}\r\n      disabled={isDeleting}\r\n      title=\"Delete Thread (D)\"\r\n    >\r\n      {isDeleting ? 'Deleting...' : 'Delete'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThreadDeletion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}