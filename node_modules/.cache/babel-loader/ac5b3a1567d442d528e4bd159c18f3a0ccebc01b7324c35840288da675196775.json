{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Desktop\\\\prj\\\\intern_ass\\\\reachinbox-assignment\\\\src\\\\components\\\\OneBox.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport './OneBox.css';\nimport ThreadDeletion from './ThreadDeletion';\nimport ResetOneBox from './ResetOneBox';\nimport ThreadReply from './ThreadReply';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OneBox() {\n  _s();\n  const [threads, setThreads] = useState([]);\n  const [selectedThread, setSelectedThread] = useState(null);\n  const [threadMessages, setThreadMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [messageLoading, setMessageLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeComponent, setActiveComponent] = useState('threadList');\n  const [searchThreadId, setSearchThreadId] = useState('');\n  const [showReplyBox, setShowReplyBox] = useState(false);\n  const [notification, setNotification] = useState(null);\n\n  // Use the correct token that works in other components\n  const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImVtYWlsIjoibW9udXJhbmphbjI1MUBnbWFpbC5jb20iLCJpZCI6MTU3OSwiZmlyc3ROYW1lIjoiQmlub2QiLCJsYXN0TmFtZSI6IkJoYWkifSwiaWF0IjoxNzQ2OTgwNTkyLCJleHAiOjE3Nzg1MTY1OTJ9.DrALXAi4YICQv0USd6W0S8f4yCleWM2z5pLSM1MaE-0';\n\n  // Make the API call when the component mounts\n  useEffect(() => {\n    const fetchThreads = async () => {\n      try {\n        console.log(\"Fetching threads...\"); // Debug log\n\n        // Use the exact same configuration as in the working getThreads.js\n        const config = {\n          method: 'get',\n          url: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        };\n        const response = await axios(config);\n\n        // Debug log for response\n        console.log(\"API Response:\", response);\n        if (response.data && response.data.data) {\n          setThreads(response.data.data);\n        } else {\n          setError('No threads found.');\n        }\n      } catch (err) {\n        console.error('Error fetching threads:', err);\n        if (err.response) {\n          console.error(`Status: ${err.response.status}`);\n          console.error(\"Response:\", err.response.data);\n          setError(`Failed to fetch threads: ${err.response.status} - ${JSON.stringify(err.response.data)}`);\n        } else if (err.request) {\n          console.error(\"No response received:\", err.request);\n          setError('No response received from server.');\n        } else {\n          console.error(\"Error:\", err.message);\n          setError(`Error: ${err.message}`);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchThreads();\n  }, []);\n\n  // Keyboard shortcuts handler\n  useEffect(() => {\n    const handleKeyDown = e => {\n      // Only apply shortcuts when not typing in an input or textarea\n      if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {\n        return;\n      }\n\n      // Only apply shortcuts when in thread messages view\n      if (activeComponent === 'threadMessages' && selectedThread) {\n        if (e.key === 'd' || e.key === 'D') {\n          handleDeleteThread();\n        } else if (e.key === 'r' || e.key === 'R') {\n          handleReplyThread();\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [activeComponent, selectedThread]);\n\n  // Focus on reply box when it opens\n  useEffect(() => {\n    if (showReplyBox && replyBoxRef.current) {\n      replyBoxRef.current.focus();\n    }\n  }, [showReplyBox]);\n\n  // Auto-dismiss notification after 3 seconds\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // Fetch messages for a specific thread\n  const fetchThreadMessages = async threadId => {\n    setMessageLoading(true);\n    setError(null); // Clear any previous errors\n    try {\n      console.log(`Fetching messages for thread ${threadId}...`);\n      const config = {\n        method: 'get',\n        maxBodyLength: Infinity,\n        url: `https://hiring.reachinbox.xyz/api/v1/onebox/messages/${threadId}`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios(config);\n      console.log(\"Thread Messages Response:\", response);\n      if (response.data && response.data.data) {\n        setThreadMessages(response.data.data);\n        // Find the thread in our list to set as selected\n        const thread = threads.find(t => t.threadId === threadId);\n        if (thread) {\n          setSelectedThread(thread);\n        } else {\n          // If thread not found in our list, create a minimal thread object\n          setSelectedThread({\n            threadId,\n            subject: `Thread #${threadId}`\n          });\n        }\n        setActiveComponent('threadMessages');\n      } else {\n        setError('No messages found for this thread.');\n      }\n    } catch (err) {\n      console.error('Error fetching thread messages:', err);\n      setError(`Failed to fetch thread messages: ${err.message}`);\n    } finally {\n      setMessageLoading(false);\n    }\n  };\n\n  // Handle thread selection\n  const handleThreadSelect = thread => {\n    setSelectedThread(thread);\n    fetchThreadMessages(thread.threadId);\n  };\n\n  // Handle thread ID search\n  const handleThreadSearch = e => {\n    e.preventDefault();\n    if (searchThreadId.trim()) {\n      fetchThreadMessages(searchThreadId.trim());\n    }\n  };\n\n  // Handle delete thread action\n  const handleDeleteThread = () => {\n    // In a real app, you would make an API call to delete the thread\n    // For now, we'll just show a notification\n    setNotification({\n      type: 'info',\n      message: `Thread \"${selectedThread.subject}\" marked for deletion (Shortcut: D)`\n    });\n    console.log(`Delete thread: ${selectedThread.threadId}`);\n    // Simulate deletion by removing from the threads list\n    setThreads(threads.filter(t => t.threadId !== selectedThread.threadId));\n    // Go back to thread list after deletion\n    setActiveComponent('threadList');\n  };\n\n  // Handle reply thread action\n  const handleReplyThread = useCallback(() => {\n    setShowReplyBox(true);\n    setNotification({\n      type: 'info',\n      message: 'Reply box opened (Shortcut: R)'\n    });\n  }, [setShowReplyBox, setNotification]);\n\n  // Handle sending a reply\n  const handleSendReply = e => {\n    e.preventDefault();\n    if (replyText.trim()) {\n      // In a real app, you would make an API call to send the reply\n      console.log(`Sending reply to thread ${selectedThread.threadId}: ${replyText}`);\n      setNotification({\n        type: 'success',\n        message: 'Reply sent successfully!'\n      });\n      setReplyText('');\n      setShowReplyBox(false);\n    }\n  };\n\n  // Render the active component based on state\n  const renderActiveComponent = () => {\n    if (loading && activeComponent === 'threadList') return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading threads...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 61\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 23\n    }, this);\n    switch (activeComponent) {\n      case 'threadList':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Email Threads\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), threads.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No threads available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ThreadListDisplay, {\n            threads: threads,\n            onSelectThread: handleThreadSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      case 'threadMessages':\n        if (messageLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 36\n        }, this);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"thread-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back-button\",\n              onClick: () => {\n                setActiveComponent('threadList');\n                setShowReplyBox(false);\n              },\n              children: \"\\u2190 Back to Threads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: (selectedThread === null || selectedThread === void 0 ? void 0 : selectedThread.subject) || 'Thread Messages'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"thread-actions\",\n              children: [/*#__PURE__*/_jsxDEV(ThreadDeletion, {\n                thread: selectedThread,\n                token: token,\n                onDeleteStart: thread => {\n                  setNotification({\n                    type: 'info',\n                    message: `Deleting thread \"${thread.subject}\"...`\n                  });\n                },\n                onDeleteSuccess: (thread, data) => {\n                  setNotification({\n                    type: 'success',\n                    message: `Thread \"${thread.subject}\" deleted successfully (Shortcut: D)`\n                  });\n\n                  // Remove the thread from the local state\n                  setThreads(threads => threads.filter(t => t.threadId !== thread.threadId));\n\n                  // Go back to thread list after deletion\n                  setActiveComponent('threadList');\n                },\n                onDeleteError: (error, thread) => {\n                  var _error$response, _error$response$data;\n                  setNotification({\n                    type: 'error',\n                    message: `Failed to delete thread: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`\n                  });\n                },\n                showConfirmation: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button reply-button\",\n                onClick: handleReplyThread,\n                title: \"Reply to Thread (R)\",\n                children: \"Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleThreadSearch,\n              className: \"thread-search-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: searchThreadId,\n                onChange: e => setSearchThreadId(e.target.value),\n                placeholder: \"Search by Thread ID\",\n                className: \"thread-search-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"thread-search-button\",\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), showReplyBox && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reply-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Reply to: \", selectedThread === null || selectedThread === void 0 ? void 0 : selectedThread.subject]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSendReply,\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: replyBoxRef,\n                value: replyText,\n                onChange: e => setReplyText(e.target.value),\n                placeholder: \"Type your reply here...\",\n                rows: 5,\n                className: \"reply-textarea\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reply-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => setShowReplyBox(false),\n                  className: \"cancel-button\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"send-button\",\n                  children: \"Send Reply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), threadMessages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No messages available for this thread.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ThreadMessagesDisplay, {\n            messages: threadMessages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a component from the sidebar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"onebox-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"onebox-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"OneBox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: activeComponent === 'threadList' ? 'active' : '',\n          onClick: () => setActiveComponent('threadList'),\n          children: \"Thread List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: activeComponent === 'threadMessages' ? 'active' : '',\n          onClick: () => {\n            if (selectedThread) {\n              setActiveComponent('threadMessages');\n            } else {\n              setActiveComponent('threadMessages');\n              setThreadMessages([]);\n            }\n          },\n          children: \"Thread Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-actions\",\n        children: /*#__PURE__*/_jsxDEV(ResetOneBox, {\n          token: token,\n          onResetStart: () => {\n            setNotification({\n              type: 'info',\n              message: 'Resetting OneBox data...'\n            });\n          },\n          onResetSuccess: data => {\n            setNotification({\n              type: 'success',\n              message: 'OneBox data reset successfully!'\n            });\n\n            // Refresh the threads list\n            setLoading(true);\n            setActiveComponent('threadList');\n\n            // Fetch threads again\n            const fetchThreads = async () => {\n              try {\n                const config = {\n                  method: 'get',\n                  url: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\n                  headers: {\n                    Authorization: `Bearer ${token}`\n                  }\n                };\n                const response = await axios(config);\n                if (response.data && response.data.data) {\n                  setThreads(response.data.data);\n                } else {\n                  setError('No threads found.');\n                }\n              } catch (err) {\n                console.error('Error fetching threads:', err);\n                setError(`Failed to fetch threads: ${err.message}`);\n              } finally {\n                setLoading(false);\n              }\n            };\n            fetchThreads();\n          },\n          onResetError: error => {\n            var _error$response2, _error$response2$data;\n            setNotification({\n              type: 'error',\n              message: `Failed to reset data: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`\n            });\n          },\n          showConfirmation: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyboard-shortcuts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Keyboard Shortcuts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this), \" - Delete thread\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this), \" - Reply to thread\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"onebox-main-content\",\n      children: renderActiveComponent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification ${notification.type}`,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n}\n\n// Component to display threads\n_s(OneBox, \"Tqef7U9XBjlvgn8ABwnrowE4bZ0=\");\n_c = OneBox;\nfunction ThreadListDisplay({\n  threads,\n  onSelectThread\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"threads-list\",\n    children: threads.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-card\",\n      onClick: () => onSelectThread(thread),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: thread.subject || 'No Subject'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: thread.body ? thread.body.substring(0, 100) + '...' : 'No body available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Thread ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 14\n        }, this), \" \", thread.threadId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this), thread.fromName && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"From:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 34\n        }, this), \" \", thread.fromName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 31\n      }, this), thread.toEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"To:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 33\n        }, this), \" \", thread.toEmail]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-thread\",\n        children: \"View Messages \\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this)]\n    }, thread.id || thread.threadId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 434,\n    columnNumber: 5\n  }, this);\n}\n\n// Component to display thread messages\n_c2 = ThreadListDisplay;\nfunction ThreadMessagesDisplay({\n  messages\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thread-messages\",\n    children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-from\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"From:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this), \" \", message.fromName || message.fromEmail || 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-date\",\n          children: new Date(message.date).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-subject\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Subject:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), \" \", message.subject || 'No Subject']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-body\",\n        children: message.body || 'No content available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this), message.attachments && message.attachments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-attachments\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Attachments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: message.attachments.map((attachment, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: attachment.filename || `Attachment ${i + 1}`\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 13\n      }, this)]\n    }, message.id || index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 456,\n    columnNumber: 5\n  }, this);\n}\n_c3 = ThreadMessagesDisplay;\nexport default OneBox;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"OneBox\");\n$RefreshReg$(_c2, \"ThreadListDisplay\");\n$RefreshReg$(_c3, \"ThreadMessagesDisplay\");","map":{"version":3,"names":["useEffect","useState","useRef","axios","ThreadDeletion","ResetOneBox","ThreadReply","jsxDEV","_jsxDEV","Fragment","_Fragment","OneBox","_s","threads","setThreads","selectedThread","setSelectedThread","threadMessages","setThreadMessages","loading","setLoading","messageLoading","setMessageLoading","error","setError","activeComponent","setActiveComponent","searchThreadId","setSearchThreadId","showReplyBox","setShowReplyBox","notification","setNotification","token","fetchThreads","console","log","config","method","url","headers","Authorization","response","data","err","status","JSON","stringify","request","message","handleKeyDown","e","target","tagName","key","handleDeleteThread","handleReplyThread","window","addEventListener","removeEventListener","replyBoxRef","current","focus","timer","setTimeout","clearTimeout","fetchThreadMessages","threadId","maxBodyLength","Infinity","thread","find","t","subject","handleThreadSelect","handleThreadSearch","preventDefault","trim","type","filter","useCallback","handleSendReply","replyText","setReplyText","renderActiveComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","ThreadListDisplay","onSelectThread","onClick","onDeleteStart","onDeleteSuccess","onDeleteError","_error$response","_error$response$data","showConfirmation","title","onSubmit","value","onChange","placeholder","ref","rows","ThreadMessagesDisplay","messages","onResetStart","onResetSuccess","onResetError","_error$response2","_error$response2$data","_c","map","body","substring","fromName","toEmail","id","_c2","index","fromEmail","Date","date","toLocaleString","attachments","attachment","i","filename","_c3","$RefreshReg$"],"sources":["D:/OneDrive/Desktop/prj/intern_ass/reachinbox-assignment/src/components/OneBox.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './OneBox.css';\r\nimport ThreadDeletion from './ThreadDeletion';\r\nimport ResetOneBox from './ResetOneBox';\r\nimport ThreadReply from './ThreadReply';\r\n\r\nfunction OneBox() {\r\n  const [threads, setThreads] = useState([]);\r\n  const [selectedThread, setSelectedThread] = useState(null);\r\n  const [threadMessages, setThreadMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [messageLoading, setMessageLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeComponent, setActiveComponent] = useState('threadList');\r\n  const [searchThreadId, setSearchThreadId] = useState('');\r\n  const [showReplyBox, setShowReplyBox] = useState(false);\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  // Use the correct token that works in other components\r\n  const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImVtYWlsIjoibW9udXJhbmphbjI1MUBnbWFpbC5jb20iLCJpZCI6MTU3OSwiZmlyc3ROYW1lIjoiQmlub2QiLCJsYXN0TmFtZSI6IkJoYWkifSwiaWF0IjoxNzQ2OTgwNTkyLCJleHAiOjE3Nzg1MTY1OTJ9.DrALXAi4YICQv0USd6W0S8f4yCleWM2z5pLSM1MaE-0';\r\n\r\n  // Make the API call when the component mounts\r\n  useEffect(() => {\r\n    const fetchThreads = async () => {\r\n      try {\r\n        console.log(\"Fetching threads...\"); // Debug log\r\n        \r\n        // Use the exact same configuration as in the working getThreads.js\r\n        const config = {\r\n          method: 'get',\r\n          url: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        };\r\n        \r\n        const response = await axios(config);\r\n        \r\n        // Debug log for response\r\n        console.log(\"API Response:\", response);\r\n\r\n        if (response.data && response.data.data) {\r\n          setThreads(response.data.data);\r\n        } else {\r\n          setError('No threads found.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching threads:', err);\r\n        if (err.response) {\r\n          console.error(`Status: ${err.response.status}`);\r\n          console.error(\"Response:\", err.response.data);\r\n          setError(`Failed to fetch threads: ${err.response.status} - ${JSON.stringify(err.response.data)}`);\r\n        } else if (err.request) {\r\n          console.error(\"No response received:\", err.request);\r\n          setError('No response received from server.');\r\n        } else {\r\n          console.error(\"Error:\", err.message);\r\n          setError(`Error: ${err.message}`);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchThreads();\r\n  }, []);\r\n\r\n  // Keyboard shortcuts handler\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      // Only apply shortcuts when not typing in an input or textarea\r\n      if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {\r\n        return;\r\n      }\r\n\r\n      // Only apply shortcuts when in thread messages view\r\n      if (activeComponent === 'threadMessages' && selectedThread) {\r\n        if (e.key === 'd' || e.key === 'D') {\r\n          handleDeleteThread();\r\n        } else if (e.key === 'r' || e.key === 'R') {\r\n          handleReplyThread();\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [activeComponent, selectedThread]);\r\n\r\n  // Focus on reply box when it opens\r\n  useEffect(() => {\r\n    if (showReplyBox && replyBoxRef.current) {\r\n      replyBoxRef.current.focus();\r\n    }\r\n  }, [showReplyBox]);\r\n\r\n  // Auto-dismiss notification after 3 seconds\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  \r\n  // Fetch messages for a specific thread\r\n  const fetchThreadMessages = async (threadId) => {\r\n    setMessageLoading(true);\r\n    setError(null); // Clear any previous errors\r\n    try {\r\n      console.log(`Fetching messages for thread ${threadId}...`);\r\n      \r\n      const config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: `https://hiring.reachinbox.xyz/api/v1/onebox/messages/${threadId}`,\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      \r\n      const response = await axios(config);\r\n      console.log(\"Thread Messages Response:\", response);\r\n\r\n      if (response.data && response.data.data) {\r\n        setThreadMessages(response.data.data);\r\n        // Find the thread in our list to set as selected\r\n        const thread = threads.find(t => t.threadId === threadId);\r\n        if (thread) {\r\n          setSelectedThread(thread);\r\n        } else {\r\n          // If thread not found in our list, create a minimal thread object\r\n          setSelectedThread({ threadId, subject: `Thread #${threadId}` });\r\n        }\r\n        setActiveComponent('threadMessages');\r\n      } else {\r\n        setError('No messages found for this thread.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching thread messages:', err);\r\n      setError(`Failed to fetch thread messages: ${err.message}`);\r\n    } finally {\r\n      setMessageLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle thread selection\r\n  const handleThreadSelect = (thread) => {\r\n    setSelectedThread(thread);\r\n    fetchThreadMessages(thread.threadId);\r\n  };\r\n\r\n  // Handle thread ID search\r\n  const handleThreadSearch = (e) => {\r\n    e.preventDefault();\r\n    if (searchThreadId.trim()) {\r\n      fetchThreadMessages(searchThreadId.trim());\r\n    }\r\n  };\r\n\r\n  // Handle delete thread action\r\n  const handleDeleteThread = () => {\r\n    // In a real app, you would make an API call to delete the thread\r\n    // For now, we'll just show a notification\r\n    setNotification({\r\n      type: 'info',\r\n      message: `Thread \"${selectedThread.subject}\" marked for deletion (Shortcut: D)`\r\n    });\r\n    \r\n    console.log(`Delete thread: ${selectedThread.threadId}`);\r\n    // Simulate deletion by removing from the threads list\r\n    setThreads(threads.filter(t => t.threadId !== selectedThread.threadId));\r\n    // Go back to thread list after deletion\r\n    setActiveComponent('threadList');\r\n  };\r\n\r\n  // Handle reply thread action\r\n  const handleReplyThread = useCallback(() => {\r\n  setShowReplyBox(true);\r\n  setNotification({\r\n    type: 'info',\r\n    message: 'Reply box opened (Shortcut: R)'\r\n  });\r\n}, [setShowReplyBox, setNotification]);\r\n\r\n\r\n  // Handle sending a reply\r\n  const handleSendReply = (e) => {\r\n    e.preventDefault();\r\n    if (replyText.trim()) {\r\n      // In a real app, you would make an API call to send the reply\r\n      console.log(`Sending reply to thread ${selectedThread.threadId}: ${replyText}`);\r\n      setNotification({\r\n        type: 'success',\r\n        message: 'Reply sent successfully!'\r\n      });\r\n      setReplyText('');\r\n      setShowReplyBox(false);\r\n    }\r\n  };\r\n\r\n  // Render the active component based on state\r\n  const renderActiveComponent = () => {\r\n    if (loading && activeComponent === 'threadList') return <p>Loading threads...</p>;\r\n    if (error) return <p className=\"error-message\">Error: {error}</p>;\r\n\r\n    switch (activeComponent) {\r\n      case 'threadList':\r\n        return (\r\n          <>\r\n            <h2>Email Threads</h2>\r\n            {threads.length === 0 ? (\r\n              <p>No threads available.</p>\r\n            ) : (\r\n              <ThreadListDisplay \r\n                threads={threads} \r\n                onSelectThread={handleThreadSelect}\r\n              />\r\n            )}\r\n          </>\r\n        );\r\n      case 'threadMessages':\r\n        if (messageLoading) return <p>Loading messages...</p>;\r\n        return (\r\n          <>\r\n            <div className=\"thread-header\">\r\n              <button \r\n                className=\"back-button\" \r\n                onClick={() => {\r\n                  setActiveComponent('threadList');\r\n                  setShowReplyBox(false);\r\n                }}\r\n              >\r\n                ← Back to Threads\r\n              </button>\r\n              <h2>{selectedThread?.subject || 'Thread Messages'}</h2>\r\n              <div className=\"thread-actions\">\r\n                <ThreadDeletion \r\n                  thread={selectedThread}\r\n                  token={token}\r\n                  onDeleteStart={(thread) => {\r\n                    setNotification({\r\n                      type: 'info',\r\n                      message: `Deleting thread \"${thread.subject}\"...`\r\n                    });\r\n                  }}\r\n                  onDeleteSuccess={(thread, data) => {\r\n                    setNotification({\r\n                      type: 'success',\r\n                      message: `Thread \"${thread.subject}\" deleted successfully (Shortcut: D)`\r\n                    });\r\n                    \r\n                    // Remove the thread from the local state\r\n                    setThreads(threads => threads.filter(t => t.threadId !== thread.threadId));\r\n                    \r\n                    // Go back to thread list after deletion\r\n                    setActiveComponent('threadList');\r\n                  }}\r\n                  onDeleteError={(error, thread) => {\r\n                    setNotification({\r\n                      type: 'error',\r\n                      message: `Failed to delete thread: ${error.response?.data?.message || error.message}`\r\n                    });\r\n                  }}\r\n                  showConfirmation={true}\r\n                />\r\n                <button \r\n                  className=\"action-button reply-button\" \r\n                  onClick={handleReplyThread}\r\n                  title=\"Reply to Thread (R)\"\r\n                >\r\n                  Reply\r\n                </button>\r\n              </div>\r\n              <form onSubmit={handleThreadSearch} className=\"thread-search-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={searchThreadId}\r\n                  onChange={(e) => setSearchThreadId(e.target.value)}\r\n                  placeholder=\"Search by Thread ID\"\r\n                  className=\"thread-search-input\"\r\n                />\r\n                <button type=\"submit\" className=\"thread-search-button\">Search</button>\r\n              </form>\r\n            </div>\r\n            \r\n            {showReplyBox && (\r\n              <div className=\"reply-box\">\r\n                <h3>Reply to: {selectedThread?.subject}</h3>\r\n                <form onSubmit={handleSendReply}>\r\n                  <textarea\r\n                    ref={replyBoxRef}\r\n                    value={replyText}\r\n                    onChange={(e) => setReplyText(e.target.value)}\r\n                    placeholder=\"Type your reply here...\"\r\n                    rows={5}\r\n                    className=\"reply-textarea\"\r\n                  />\r\n                  <div className=\"reply-actions\">\r\n                    <button type=\"button\" onClick={() => setShowReplyBox(false)} className=\"cancel-button\">\r\n                      Cancel\r\n                    </button>\r\n                    <button type=\"submit\" className=\"send-button\">\r\n                      Send Reply\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n            \r\n            {threadMessages.length === 0 ? (\r\n              <p>No messages available for this thread.</p>\r\n            ) : (\r\n              <ThreadMessagesDisplay messages={threadMessages} />\r\n            )}\r\n          </>\r\n        );\r\n      default:\r\n        return <p>Select a component from the sidebar</p>;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"onebox-layout\">\r\n      <div className=\"onebox-sidebar\">\r\n        <h3>OneBox</h3>\r\n        <ul>\r\n          <li \r\n            className={activeComponent === 'threadList' ? 'active' : ''}\r\n            onClick={() => setActiveComponent('threadList')}\r\n          >\r\n            Thread List\r\n          </li>\r\n          <li \r\n            className={activeComponent === 'threadMessages' ? 'active' : ''}\r\n            onClick={() => {\r\n              if (selectedThread) {\r\n                setActiveComponent('threadMessages');\r\n              } else {\r\n                setActiveComponent('threadMessages');\r\n                setThreadMessages([]);\r\n              }\r\n            }}\r\n          >\r\n            Thread Messages\r\n          </li>\r\n        </ul>\r\n        \r\n        <div className=\"sidebar-actions\">\r\n          <ResetOneBox \r\n            token={token}\r\n            onResetStart={() => {\r\n              setNotification({\r\n                type: 'info',\r\n                message: 'Resetting OneBox data...'\r\n              });\r\n            }}\r\n            onResetSuccess={(data) => {\r\n              setNotification({\r\n                type: 'success',\r\n                message: 'OneBox data reset successfully!'\r\n              });\r\n              \r\n              // Refresh the threads list\r\n              setLoading(true);\r\n              setActiveComponent('threadList');\r\n              \r\n              // Fetch threads again\r\n              const fetchThreads = async () => {\r\n                try {\r\n                  const config = {\r\n                    method: 'get',\r\n                    url: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\r\n                    headers: {\r\n                      Authorization: `Bearer ${token}`,\r\n                    },\r\n                  };\r\n                  \r\n                  const response = await axios(config);\r\n                  \r\n                  if (response.data && response.data.data) {\r\n                    setThreads(response.data.data);\r\n                  } else {\r\n                    setError('No threads found.');\r\n                  }\r\n                } catch (err) {\r\n                  console.error('Error fetching threads:', err);\r\n                  setError(`Failed to fetch threads: ${err.message}`);\r\n                } finally {\r\n                  setLoading(false);\r\n                }\r\n              };\r\n\r\n              fetchThreads();\r\n            }}\r\n            onResetError={(error) => {\r\n              setNotification({\r\n                type: 'error',\r\n                message: `Failed to reset data: ${error.response?.data?.message || error.message}`\r\n              });\r\n            }}\r\n            showConfirmation={true}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"keyboard-shortcuts\">\r\n          <h4>Keyboard Shortcuts</h4>\r\n          <ul>\r\n            <li><strong>D</strong> - Delete thread</li>\r\n            <li><strong>R</strong> - Reply to thread</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"onebox-main-content\">\r\n        {renderActiveComponent()}\r\n      </div>\r\n      \r\n      {notification && (\r\n        <div className={`notification ${notification.type}`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Component to display threads\r\nfunction ThreadListDisplay({ threads, onSelectThread }) {\r\n  return (\r\n    <div className=\"threads-list\">\r\n      {threads.map((thread) => (\r\n        <div \r\n          key={thread.id || thread.threadId} \r\n          className=\"thread-card\"\r\n          onClick={() => onSelectThread(thread)}\r\n        >\r\n          <h3>{thread.subject || 'No Subject'}</h3>\r\n          <p>{thread.body ? thread.body.substring(0, 100) + '...' : 'No body available'}</p>\r\n          <p><strong>Thread ID:</strong> {thread.threadId}</p>\r\n          {thread.fromName && <p><strong>From:</strong> {thread.fromName}</p>}\r\n          {thread.toEmail && <p><strong>To:</strong> {thread.toEmail}</p>}\r\n          <div className=\"view-thread\">View Messages →</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Component to display thread messages\r\nfunction ThreadMessagesDisplay({ messages }) {\r\n  return (\r\n    <div className=\"thread-messages\">\r\n      {messages.map((message, index) => (\r\n        <div key={message.id || index} className=\"message-card\">\r\n          <div className=\"message-header\">\r\n            <div className=\"message-from\">\r\n              <strong>From:</strong> {message.fromName || message.fromEmail || 'Unknown'}\r\n            </div>\r\n            <div className=\"message-date\">\r\n              {new Date(message.date).toLocaleString()}\r\n            </div>\r\n          </div>\r\n          <div className=\"message-subject\">\r\n            <strong>Subject:</strong> {message.subject || 'No Subject'}\r\n          </div>\r\n          <div className=\"message-body\">\r\n            {message.body || 'No content available'}\r\n          </div>\r\n          {message.attachments && message.attachments.length > 0 && (\r\n            <div className=\"message-attachments\">\r\n              <strong>Attachments:</strong>\r\n              <ul>\r\n                {message.attachments.map((attachment, i) => (\r\n                  <li key={i}>{attachment.filename || `Attachment ${i+1}`}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OneBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}