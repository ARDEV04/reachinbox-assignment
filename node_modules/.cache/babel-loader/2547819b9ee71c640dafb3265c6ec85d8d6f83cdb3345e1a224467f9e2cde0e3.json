{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Desktop\\\\prj\\\\intern_ass\\\\reachinbox-assignment\\\\src\\\\components\\\\OneBox.js\",\n  _s = $RefreshSig$();\n// src/components/OneBox.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport './OneBox.css';\nimport ThreadDeletion from './ThreadDeletion';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OneBox() {\n  _s();\n  const [threads, setThreads] = useState([]);\n  const [selectedThread, setSelectedThread] = useState(null);\n  const [threadMessages, setThreadMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [messageLoading, setMessageLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeComponent, setActiveComponent] = useState('threadList');\n  const [searchThreadId, setSearchThreadId] = useState('');\n  const [showReplyBox, setShowReplyBox] = useState(false);\n  const [replyText, setReplyText] = useState('');\n  const [notification, setNotification] = useState(null);\n  const replyBoxRef = useRef(null);\n  const token = 'YOUR_VALID_JWT_TOKEN_HERE';\n  useEffect(() => {\n    const fetchThreads = async () => {\n      try {\n        const response = await axios.get('https://hiring.reachinbox.xyz/api/v1/onebox/list', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setThreads(response.data.data);\n      } catch (err) {\n        setError('Failed to fetch threads');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchThreads();\n  }, []);\n  const fetchThreadMessages = async threadId => {\n    setMessageLoading(true);\n    try {\n      const response = await axios.get(`https://hiring.reachinbox.xyz/api/v1/onebox/messages/${threadId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setThreadMessages(response.data.data);\n      const thread = threads.find(t => t.threadId === threadId);\n      setSelectedThread(thread || {\n        threadId\n      });\n      setActiveComponent('threadMessages');\n    } catch (err) {\n      setError('Failed to fetch messages');\n    } finally {\n      setMessageLoading(false);\n    }\n  };\n  const handleThreadSelect = thread => {\n    setSelectedThread(thread);\n    fetchThreadMessages(thread.threadId);\n  };\n  const handleSendReply = e => {\n    e.preventDefault();\n    console.log(`Reply to ${selectedThread.threadId}: ${replyText}`);\n    setReplyText('');\n    setShowReplyBox(false);\n  };\n  const renderActiveComponent = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading threads...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }, this);\n    switch (activeComponent) {\n      case 'threadList':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Email Threads\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), threads.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No threads available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"threads-list\",\n            children: threads.map(thread => {\n              var _thread$body;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"thread-card\",\n                onClick: () => handleThreadSelect(thread),\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: thread.subject || 'No Subject'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [(_thread$body = thread.body) === null || _thread$body === void 0 ? void 0 : _thread$body.slice(0, 80), \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)]\n              }, thread.threadId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      case 'threadMessages':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveComponent('threadList'),\n            children: \"\\u2190 Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: (selectedThread === null || selectedThread === void 0 ? void 0 : selectedThread.subject) || 'Thread Messages'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ThreadDeletion, {\n            thread: selectedThread,\n            token: token,\n            onDeleteStart: thread => setNotification({\n              type: 'info',\n              message: `Deleting \"${thread.subject}\"...`\n            }),\n            onDeleteSuccess: thread => {\n              setNotification({\n                type: 'success',\n                message: `Deleted \"${thread.subject}\"`\n              });\n              setThreads(prev => prev.filter(t => t.threadId !== thread.threadId));\n              setActiveComponent('threadList');\n            },\n            onDeleteError: err => {\n              setNotification({\n                type: 'error',\n                message: err.message\n              });\n            },\n            showConfirmation: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), showReplyBox && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendReply,\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: replyText,\n              ref: replyBoxRef,\n              onChange: e => setReplyText(e.target.value),\n              placeholder: \"Type your reply...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), messageLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading messages...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-list\",\n            children: threadMessages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"From:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 24\n                }, this), \" \", msg.fromName || msg.fromEmail]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Subject:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 24\n                }, this), \" \", msg.subject]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: msg.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"onebox\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"OneBox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setActiveComponent('threadList'),\n          children: \"Threads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [notification && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `notification ${notification.type}`,\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 26\n      }, this), renderActiveComponent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(OneBox, \"Qmlm0MrS7DI52Jf4X5hBc19w+4M=\");\n_c = OneBox;\nexport default OneBox;\nvar _c;\n$RefreshReg$(_c, \"OneBox\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","ThreadDeletion","jsxDEV","_jsxDEV","Fragment","_Fragment","OneBox","_s","threads","setThreads","selectedThread","setSelectedThread","threadMessages","setThreadMessages","loading","setLoading","messageLoading","setMessageLoading","error","setError","activeComponent","setActiveComponent","searchThreadId","setSearchThreadId","showReplyBox","setShowReplyBox","replyText","setReplyText","notification","setNotification","replyBoxRef","token","fetchThreads","response","get","headers","Authorization","data","err","fetchThreadMessages","threadId","thread","find","t","handleThreadSelect","handleSendReply","e","preventDefault","console","log","renderActiveComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","_thread$body","onClick","subject","body","slice","onDeleteStart","type","message","onDeleteSuccess","prev","filter","onDeleteError","showConfirmation","onSubmit","value","ref","onChange","target","placeholder","msg","idx","fromName","fromEmail","_c","$RefreshReg$"],"sources":["D:/OneDrive/Desktop/prj/intern_ass/reachinbox-assignment/src/components/OneBox.js"],"sourcesContent":["// src/components/OneBox.js\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './OneBox.css';\r\nimport ThreadDeletion from './ThreadDeletion';\r\n\r\nfunction OneBox() {\r\n  const [threads, setThreads] = useState([]);\r\n  const [selectedThread, setSelectedThread] = useState(null);\r\n  const [threadMessages, setThreadMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [messageLoading, setMessageLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeComponent, setActiveComponent] = useState('threadList');\r\n  const [searchThreadId, setSearchThreadId] = useState('');\r\n  const [showReplyBox, setShowReplyBox] = useState(false);\r\n  const [replyText, setReplyText] = useState('');\r\n  const [notification, setNotification] = useState(null);\r\n  const replyBoxRef = useRef(null);\r\n\r\n  const token = 'YOUR_VALID_JWT_TOKEN_HERE';\r\n\r\n  useEffect(() => {\r\n    const fetchThreads = async () => {\r\n      try {\r\n        const response = await axios.get('https://hiring.reachinbox.xyz/api/v1/onebox/list', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setThreads(response.data.data);\r\n      } catch (err) {\r\n        setError('Failed to fetch threads');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchThreads();\r\n  }, []);\r\n\r\n  const fetchThreadMessages = async (threadId) => {\r\n    setMessageLoading(true);\r\n    try {\r\n      const response = await axios.get(`https://hiring.reachinbox.xyz/api/v1/onebox/messages/${threadId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setThreadMessages(response.data.data);\r\n      const thread = threads.find(t => t.threadId === threadId);\r\n      setSelectedThread(thread || { threadId });\r\n      setActiveComponent('threadMessages');\r\n    } catch (err) {\r\n      setError('Failed to fetch messages');\r\n    } finally {\r\n      setMessageLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleThreadSelect = (thread) => {\r\n    setSelectedThread(thread);\r\n    fetchThreadMessages(thread.threadId);\r\n  };\r\n\r\n  const handleSendReply = (e) => {\r\n    e.preventDefault();\r\n    console.log(`Reply to ${selectedThread.threadId}: ${replyText}`);\r\n    setReplyText('');\r\n    setShowReplyBox(false);\r\n  };\r\n\r\n  const renderActiveComponent = () => {\r\n    if (loading) return <p>Loading threads...</p>;\r\n    if (error) return <p className=\"error\">{error}</p>;\r\n\r\n    switch (activeComponent) {\r\n      case 'threadList':\r\n        return (\r\n          <>\r\n            <h2>Email Threads</h2>\r\n            {threads.length === 0 ? (\r\n              <p>No threads available</p>\r\n            ) : (\r\n              <div className=\"threads-list\">\r\n                {threads.map((thread) => (\r\n                  <div\r\n                    key={thread.threadId}\r\n                    className=\"thread-card\"\r\n                    onClick={() => handleThreadSelect(thread)}\r\n                  >\r\n                    <h3>{thread.subject || 'No Subject'}</h3>\r\n                    <p>{thread.body?.slice(0, 80)}...</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </>\r\n        );\r\n\r\n      case 'threadMessages':\r\n        return (\r\n          <>\r\n            <button onClick={() => setActiveComponent('threadList')}>← Back</button>\r\n            <h2>{selectedThread?.subject || 'Thread Messages'}</h2>\r\n\r\n            <ThreadDeletion\r\n              thread={selectedThread}\r\n              token={token}\r\n              onDeleteStart={(thread) => setNotification({ type: 'info', message: `Deleting \"${thread.subject}\"...` })}\r\n              onDeleteSuccess={(thread) => {\r\n                setNotification({ type: 'success', message: `Deleted \"${thread.subject}\"` });\r\n                setThreads(prev => prev.filter(t => t.threadId !== thread.threadId));\r\n                setActiveComponent('threadList');\r\n              }}\r\n              onDeleteError={(err) => {\r\n                setNotification({ type: 'error', message: err.message });\r\n              }}\r\n              showConfirmation={true}\r\n            />\r\n\r\n            {showReplyBox && (\r\n              <form onSubmit={handleSendReply}>\r\n                <textarea\r\n                  value={replyText}\r\n                  ref={replyBoxRef}\r\n                  onChange={(e) => setReplyText(e.target.value)}\r\n                  placeholder=\"Type your reply...\"\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n              </form>\r\n            )}\r\n\r\n            {messageLoading ? (\r\n              <p>Loading messages...</p>\r\n            ) : (\r\n              <div className=\"messages-list\">\r\n                {threadMessages.map((msg, idx) => (\r\n                  <div key={idx} className=\"message-card\">\r\n                    <p><strong>From:</strong> {msg.fromName || msg.fromEmail}</p>\r\n                    <p><strong>Subject:</strong> {msg.subject}</p>\r\n                    <div>{msg.body}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"onebox\">\r\n      <aside className=\"sidebar\">\r\n        <h3>OneBox</h3>\r\n        <ul>\r\n          <li onClick={() => setActiveComponent('threadList')}>Threads</li>\r\n        </ul>\r\n      </aside>\r\n      <main className=\"main\">\r\n        {notification && <div className={`notification ${notification.type}`}>{notification.message}</div>}\r\n        {renderActiveComponent()}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OneBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}