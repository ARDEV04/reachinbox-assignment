{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Desktop\\\\prj\\\\intern_ass\\\\reachinbox-assignment\\\\src\\\\components\\\\OneBox.js\",\n  _s = $RefreshSig$();\n// src/components/OneBox.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './OneBox.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OneBox() {\n  _s();\n  const [threads, setThreads] = useState([]); // State to hold the list of threads\n  const [loading, setLoading] = useState(true); // State to handle the loading status\n  const [error, setError] = useState(null); // State to handle any errors\n  const [activeTab, setActiveTab] = useState('threads'); // Active tab (only 'threads' in this case)\n\n  // Effect hook to fetch the threads when the component is mounted\n  useEffect(() => {\n    const fetchThreads = async () => {\n      try {\n        const res = await axios.get('https://hiring.reachinbox.xyz/api/v1/onebox/list');\n\n        // Set the threads data from the API response\n        setThreads(res.data.data || []);\n      } catch (err) {\n        setError('Failed to fetch threads');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchThreads(); // Fetch threads when the component mounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"onebox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OneBox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'threads' ? 'active' : '',\n          onClick: () => setActiveTab('threads'),\n          children: \"Thread List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: activeTab === 'threads' ? 'All Email Threads' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) // Display loading state while fetching data\n      : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) // Display error message if fetching fails\n      : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [activeTab === 'threads' && /*#__PURE__*/_jsxDEV(ThreadList, {\n          threads: threads\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 41\n        }, this), \"  // Display thread list if loaded\"]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n// ThreadList component to display the threads\n_s(OneBox, \"9cGh2O9I4GgoL0pLcv3c7aq1xao=\");\n_c = OneBox;\nfunction ThreadList({\n  threads\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"threads-list\",\n    children: threads.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: thread.subject || 'No Subject'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: thread.snippet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, thread.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ThreadList;\nexport default OneBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"OneBox\");\n$RefreshReg$(_c2, \"ThreadList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","OneBox","_s","threads","setThreads","loading","setLoading","error","setError","activeTab","setActiveTab","fetchThreads","res","get","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ThreadList","_c","map","thread","subject","snippet","id","_c2","$RefreshReg$"],"sources":["D:/OneDrive/Desktop/prj/intern_ass/reachinbox-assignment/src/components/OneBox.js"],"sourcesContent":["// src/components/OneBox.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './OneBox.css';\r\n\r\nfunction OneBox() {\r\n  const [threads, setThreads] = useState([]);   // State to hold the list of threads\r\n  const [loading, setLoading] = useState(true);  // State to handle the loading status\r\n  const [error, setError] = useState(null);  // State to handle any errors\r\n  const [activeTab, setActiveTab] = useState('threads');  // Active tab (only 'threads' in this case)\r\n\r\n  // Effect hook to fetch the threads when the component is mounted\r\n  useEffect(() => {\r\n    const fetchThreads = async () => {\r\n      try {\r\n        const res = await axios.get('https://hiring.reachinbox.xyz/api/v1/onebox/list');\r\n\r\n        // Set the threads data from the API response\r\n        setThreads(res.data.data || []);\r\n      } catch (err) {\r\n        setError('Failed to fetch threads');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchThreads(); // Fetch threads when the component mounts\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"onebox-container\">\r\n      <aside className=\"sidebar\">\r\n        <h2>OneBox</h2>\r\n        <nav>\r\n          <button\r\n            className={activeTab === 'threads' ? 'active' : ''}\r\n            onClick={() => setActiveTab('threads')}\r\n          >\r\n            Thread List\r\n          </button>\r\n        </nav>\r\n      </aside>\r\n\r\n      <main className=\"main-content\">\r\n        <h3>{activeTab === 'threads' ? 'All Email Threads' : ''}</h3>\r\n        {loading ? (\r\n          <p>Loading...</p>  // Display loading state while fetching data\r\n        ) : error ? (\r\n          <p className=\"error-text\">{error}</p>  // Display error message if fetching fails\r\n        ) : (\r\n          <>\r\n            {activeTab === 'threads' && <ThreadList threads={threads} />}  // Display thread list if loaded\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ThreadList component to display the threads\r\nfunction ThreadList({ threads }) {\r\n  return (\r\n    <div className=\"threads-list\">\r\n      {threads.map((thread) => (\r\n        <div key={thread.id} className=\"thread-card\">\r\n          <p><strong>{thread.subject || 'No Subject'}</strong></p>\r\n          <p>{thread.snippet}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OneBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}