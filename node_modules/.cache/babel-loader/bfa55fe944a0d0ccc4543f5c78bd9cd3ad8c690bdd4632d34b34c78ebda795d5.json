{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Desktop\\\\prj\\\\intern_ass\\\\reachinbox-assignment\\\\src\\\\components\\\\ThreadReply.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './ThreadReply.css';\n\n/**\r\n * ThreadReply component - Handles replying to email threads\r\n * \r\n * @param {Object} props - Component props\r\n * @param {Object} props.thread - The thread to reply to\r\n * @param {string} props.token - Authentication token\r\n * @param {Function} props.onReplySuccess - Callback function when reply is successful\r\n * @param {Function} props.onReplyError - Callback function when reply fails\r\n * @param {Function} props.onReplyStart - Callback function when reply starts\r\n * @param {Function} props.onCancel - Callback function when reply is cancelled\r\n * @param {boolean} props.isOpen - Whether the reply form is open\r\n * @param {Object} props.defaultValues - Default values for the reply form\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreadReply = ({\n  thread,\n  token,\n  onReplySuccess,\n  onReplyError,\n  onReplyStart,\n  onCancel,\n  isOpen = false,\n  defaultValues = {}\n}) => {\n  _s();\n  const [replyText, setReplyText] = useState(defaultValues.body || '');\n  const [toName, setToName] = useState(defaultValues.toName || '');\n  const [toEmail, setToEmail] = useState(defaultValues.to || '');\n  const [fromName, setFromName] = useState(defaultValues.fromName || '');\n  const [fromEmail, setFromEmail] = useState(defaultValues.from || '');\n  const [subject, setSubject] = useState(defaultValues.subject || '');\n  const [isSending, setIsSending] = useState(false);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const replyTextareaRef = useRef(null);\n\n  // Focus on the reply textarea when the component opens\n  useEffect(() => {\n    if (isOpen && replyTextareaRef.current) {\n      replyTextareaRef.current.focus();\n    }\n  }, [isOpen]);\n\n  // Handle sending the reply\n  const handleSendReply = async e => {\n    e.preventDefault();\n    if (!thread || !thread.threadId) {\n      console.error('No thread or thread ID provided for reply');\n      if (onReplyError) {\n        onReplyError(new Error('No thread or thread ID provided for reply'));\n      }\n      return;\n    }\n    if (!replyText.trim()) {\n      if (onReplyError) {\n        onReplyError(new Error('Reply text cannot be empty'));\n      }\n      return;\n    }\n    setIsSending(true);\n\n    // Call the onReplyStart callback if provided\n    if (onReplyStart) {\n      onReplyStart(thread);\n    }\n    try {\n      // Prepare the reply data\n      const replyData = {\n        body: replyText,\n        // Include optional fields if they have values\n        ...(toName && {\n          toName\n        }),\n        ...(toEmail && {\n          to: toEmail\n        }),\n        ...(fromName && {\n          fromName\n        }),\n        ...(fromEmail && {\n          from: fromEmail\n        }),\n        ...(subject && {\n          subject\n        }),\n        // These fields would typically come from the thread data\n        // but we're allowing them to be overridden if needed\n        references: defaultValues.references || [],\n        inReplyTo: defaultValues.inReplyTo || ''\n      };\n\n      // Make the API call to send the reply\n      const config = {\n        method: 'post',\n        maxBodyLength: Infinity,\n        url: `https://hiring.reachinbox.xyz/api/v1/onebox/reply/${thread.threadId}`,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        data: replyData\n      };\n      const response = await axios.request(config);\n      console.log(\"Reply response:\", JSON.stringify(response.data));\n\n      // Call the onReplySuccess callback if provided\n      if (onReplySuccess) {\n        onReplySuccess(response.data, thread);\n      }\n\n      // Reset the form\n      setReplyText('');\n\n      // Close the form if there's a cancel handler\n      if (onCancel) {\n        onCancel();\n      }\n    } catch (error) {\n      console.error(\"Error sending reply:\", error);\n\n      // Call the onReplyError callback if provided\n      if (onReplyError) {\n        onReplyError(error, thread);\n      }\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  // If the component is not open, don't render anything\n  if (!isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thread-reply\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Reply to: \", (thread === null || thread === void 0 ? void 0 : thread.subject) || 'Thread']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendReply,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-form-header\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"toggle-advanced-button\",\n          onClick: () => setShowAdvanced(!showAdvanced),\n          children: showAdvanced ? 'Hide Advanced Options' : 'Show Advanced Options'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), showAdvanced && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"advanced-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"toName\",\n            children: \"Recipient Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"toName\",\n            value: toName,\n            onChange: e => setToName(e.target.value),\n            placeholder: \"Recipient Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"toEmail\",\n            children: \"Recipient Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"toEmail\",\n            value: toEmail,\n            onChange: e => setToEmail(e.target.value),\n            placeholder: \"recipient@example.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fromName\",\n            children: \"Sender Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"fromName\",\n            value: fromName,\n            onChange: e => setFromName(e.target.value),\n            placeholder: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fromEmail\",\n            children: \"Sender Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"fromEmail\",\n            value: fromEmail,\n            onChange: e => setFromEmail(e.target.value),\n            placeholder: \"your@example.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"subject\",\n            children: \"Subject:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"subject\",\n            value: subject,\n            onChange: e => setSubject(e.target.value),\n            placeholder: \"Re: Original Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"replyText\",\n          children: \"Your Reply:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"replyText\",\n          ref: replyTextareaRef,\n          value: replyText,\n          onChange: e => setReplyText(e.target.value),\n          placeholder: \"Type your reply here...\",\n          rows: 5,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onCancel,\n          className: \"cancel-button\",\n          disabled: isSending,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          disabled: isSending || !replyText.trim(),\n          children: isSending ? 'Sending...' : 'Send Reply'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreadReply, \"vfcj1WHqQDmk9WhQ/G8+EbJueHY=\");\n_c = ThreadReply;\nexport default ThreadReply;\nvar _c;\n$RefreshReg$(_c, \"ThreadReply\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","ThreadReply","thread","token","onReplySuccess","onReplyError","onReplyStart","onCancel","isOpen","defaultValues","_s","replyText","setReplyText","body","toName","setToName","toEmail","setToEmail","to","fromName","setFromName","fromEmail","setFromEmail","from","subject","setSubject","isSending","setIsSending","showAdvanced","setShowAdvanced","replyTextareaRef","current","focus","handleSendReply","e","preventDefault","threadId","console","error","Error","trim","replyData","references","inReplyTo","config","method","maxBodyLength","Infinity","url","headers","data","response","request","log","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onClick","htmlFor","id","value","onChange","target","placeholder","ref","rows","required","disabled","_c","$RefreshReg$"],"sources":["D:/OneDrive/Desktop/prj/intern_ass/reachinbox-assignment/src/components/ThreadReply.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ThreadReply.css';\r\n\r\n/**\r\n * ThreadReply component - Handles replying to email threads\r\n * \r\n * @param {Object} props - Component props\r\n * @param {Object} props.thread - The thread to reply to\r\n * @param {string} props.token - Authentication token\r\n * @param {Function} props.onReplySuccess - Callback function when reply is successful\r\n * @param {Function} props.onReplyError - Callback function when reply fails\r\n * @param {Function} props.onReplyStart - Callback function when reply starts\r\n * @param {Function} props.onCancel - Callback function when reply is cancelled\r\n * @param {boolean} props.isOpen - Whether the reply form is open\r\n * @param {Object} props.defaultValues - Default values for the reply form\r\n */\r\nconst ThreadReply = ({ \r\n  thread,\r\n  token,\r\n  onReplySuccess,\r\n  onReplyError,\r\n  onReplyStart,\r\n  onCancel,\r\n  isOpen = false,\r\n  defaultValues = {}\r\n}) => {\r\n  const [replyText, setReplyText] = useState(defaultValues.body || '');\r\n  const [toName, setToName] = useState(defaultValues.toName || '');\r\n  const [toEmail, setToEmail] = useState(defaultValues.to || '');\r\n  const [fromName, setFromName] = useState(defaultValues.fromName || '');\r\n  const [fromEmail, setFromEmail] = useState(defaultValues.from || '');\r\n  const [subject, setSubject] = useState(defaultValues.subject || '');\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [showAdvanced, setShowAdvanced] = useState(false);\r\n  \r\n  const replyTextareaRef = useRef(null);\r\n\r\n  // Focus on the reply textarea when the component opens\r\n  useEffect(() => {\r\n    if (isOpen && replyTextareaRef.current) {\r\n      replyTextareaRef.current.focus();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Handle sending the reply\r\n  const handleSendReply = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!thread || !thread.threadId) {\r\n      console.error('No thread or thread ID provided for reply');\r\n      if (onReplyError) {\r\n        onReplyError(new Error('No thread or thread ID provided for reply'));\r\n      }\r\n      return;\r\n    }\r\n    \r\n    if (!replyText.trim()) {\r\n      if (onReplyError) {\r\n        onReplyError(new Error('Reply text cannot be empty'));\r\n      }\r\n      return;\r\n    }\r\n    \r\n    setIsSending(true);\r\n    \r\n    // Call the onReplyStart callback if provided\r\n    if (onReplyStart) {\r\n      onReplyStart(thread);\r\n    }\r\n    \r\n    try {\r\n      // Prepare the reply data\r\n      const replyData = {\r\n        body: replyText,\r\n        // Include optional fields if they have values\r\n        ...(toName && { toName }),\r\n        ...(toEmail && { to: toEmail }),\r\n        ...(fromName && { fromName }),\r\n        ...(fromEmail && { from: fromEmail }),\r\n        ...(subject && { subject }),\r\n        // These fields would typically come from the thread data\r\n        // but we're allowing them to be overridden if needed\r\n        references: defaultValues.references || [],\r\n        inReplyTo: defaultValues.inReplyTo || ''\r\n      };\r\n      \r\n      // Make the API call to send the reply\r\n      const config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: `https://hiring.reachinbox.xyz/api/v1/onebox/reply/${thread.threadId}`,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        data: replyData\r\n      };\r\n      \r\n      const response = await axios.request(config);\r\n      console.log(\"Reply response:\", JSON.stringify(response.data));\r\n      \r\n      // Call the onReplySuccess callback if provided\r\n      if (onReplySuccess) {\r\n        onReplySuccess(response.data, thread);\r\n      }\r\n      \r\n      // Reset the form\r\n      setReplyText('');\r\n      \r\n      // Close the form if there's a cancel handler\r\n      if (onCancel) {\r\n        onCancel();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending reply:\", error);\r\n      \r\n      // Call the onReplyError callback if provided\r\n      if (onReplyError) {\r\n        onReplyError(error, thread);\r\n      }\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  // If the component is not open, don't render anything\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"thread-reply\">\r\n      <h3>Reply to: {thread?.subject || 'Thread'}</h3>\r\n      <form onSubmit={handleSendReply}>\r\n        <div className=\"reply-form-header\">\r\n          <button \r\n            type=\"button\" \r\n            className=\"toggle-advanced-button\"\r\n            onClick={() => setShowAdvanced(!showAdvanced)}\r\n          >\r\n            {showAdvanced ? 'Hide Advanced Options' : 'Show Advanced Options'}\r\n          </button>\r\n        </div>\r\n        \r\n        {showAdvanced && (\r\n          <div className=\"advanced-options\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"toName\">Recipient Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"toName\"\r\n                value={toName}\r\n                onChange={(e) => setToName(e.target.value)}\r\n                placeholder=\"Recipient Name\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"toEmail\">Recipient Email:</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"toEmail\"\r\n                value={toEmail}\r\n                onChange={(e) => setToEmail(e.target.value)}\r\n                placeholder=\"recipient@example.com\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"fromName\">Sender Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"fromName\"\r\n                value={fromName}\r\n                onChange={(e) => setFromName(e.target.value)}\r\n                placeholder=\"Your Name\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"fromEmail\">Sender Email:</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"fromEmail\"\r\n                value={fromEmail}\r\n                onChange={(e) => setFromEmail(e.target.value)}\r\n                placeholder=\"your@example.com\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"subject\">Subject:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setSubject(e.target.value)}\r\n                placeholder=\"Re: Original Subject\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"replyText\">Your Reply:</label>\r\n          <textarea\r\n            id=\"replyText\"\r\n            ref={replyTextareaRef}\r\n            value={replyText}\r\n            onChange={(e) => setReplyText(e.target.value)}\r\n            placeholder=\"Type your reply here...\"\r\n            rows={5}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"reply-actions\">\r\n          <button \r\n            type=\"button\" \r\n            onClick={onCancel}\r\n            className=\"cancel-button\"\r\n            disabled={isSending}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button \r\n            type=\"submit\"\r\n            className=\"send-button\"\r\n            disabled={isSending || !replyText.trim()}\r\n          >\r\n            {isSending ? 'Sending...' : 'Send Reply'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadReply;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}