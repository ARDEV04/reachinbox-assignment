{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Desktop\\\\prj\\\\intern_ass\\\\reachinbox-assignment\\\\src\\\\components\\\\OneBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './OneBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = 'your_jwt_token_here'; // Replace with your actual JWT token\nconst cookie = 'connect.sid=s%3A...'; // your actual cookie\n\nfunction OneBox() {\n  _s();\n  const [threads, setThreads] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchThreads = async () => {\n      try {\n        const res = await axios.get('https://hiring.reachinbox.xyz/api/v1/onebox/list', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            Cookie: cookie\n          },\n          withCredentials: true\n        });\n        console.log('Fetched Threads:', res.data); // Debugging response\n        if (res.data && res.data.data) {\n          setThreads(res.data.data); // Set state with the fetched threads\n        } else {\n          setError('No threads found.');\n        }\n      } catch (err) {\n        console.error('Error fetching threads:', err); // Log error if any\n        setError('Failed to fetch threads');\n      } finally {\n        setLoading(false); // Set loading to false after the request\n      }\n    };\n    fetchThreads();\n  }, []); // Empty dependency array ensures this runs once when the component mounts\n\n  // Debugging the state value before rendering\n  console.log('Threads State:', threads); // Log threads state to check if data is there\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"onebox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OneBox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Thread List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All Email Threads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ThreadList, {\n        threads: threads\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) // Render threads if data is available\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n// ThreadList component to display threads\n_s(OneBox, \"176PDi5m4uWjlo2O6YaXAVCBr8s=\");\n_c = OneBox;\nfunction ThreadList({\n  threads\n}) {\n  if (threads.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No threads available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"threads-list\",\n    children: threads.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: thread.subject || 'No Subject'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: thread.snippet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, thread.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ThreadList;\nexport default OneBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"OneBox\");\n$RefreshReg$(_c2, \"ThreadList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","token","cookie","OneBox","_s","threads","setThreads","loading","setLoading","error","setError","fetchThreads","res","get","headers","Authorization","Cookie","withCredentials","console","log","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ThreadList","_c","length","map","thread","subject","snippet","id","_c2","$RefreshReg$"],"sources":["D:/OneDrive/Desktop/prj/intern_ass/reachinbox-assignment/src/components/OneBox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './OneBox.css';\r\n\r\nconst token = 'your_jwt_token_here'; // Replace with your actual JWT token\r\nconst cookie = 'connect.sid=s%3A...'; // your actual cookie\r\n\r\nfunction OneBox() {\r\n  const [threads, setThreads] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    const fetchThreads = async () => {\r\n      try {\r\n        const res = await axios.get('https://hiring.reachinbox.xyz/api/v1/onebox/list', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Cookie: cookie,\r\n          },\r\n          withCredentials: true,\r\n        });\r\n\r\n        console.log('Fetched Threads:', res.data); // Debugging response\r\n        if (res.data && res.data.data) {\r\n          setThreads(res.data.data);  // Set state with the fetched threads\r\n        } else {\r\n          setError('No threads found.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching threads:', err); // Log error if any\r\n        setError('Failed to fetch threads');\r\n      } finally {\r\n        setLoading(false); // Set loading to false after the request\r\n      }\r\n    };\r\n\r\n    fetchThreads();\r\n  }, []);  // Empty dependency array ensures this runs once when the component mounts\r\n\r\n  // Debugging the state value before rendering\r\n  console.log('Threads State:', threads); // Log threads state to check if data is there\r\n\r\n  return (\r\n    <div className=\"onebox-container\">\r\n      <aside className=\"sidebar\">\r\n        <h2>OneBox</h2>\r\n        <nav>\r\n          <button>Thread List</button> {/* Only one tab for now */}\r\n        </nav>\r\n      </aside>\r\n\r\n      <main className=\"main-content\">\r\n        <h3>All Email Threads</h3>\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : error ? (\r\n          <p className=\"error-text\">{error}</p>\r\n        ) : (\r\n          <ThreadList threads={threads} />  // Render threads if data is available\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ThreadList component to display threads\r\nfunction ThreadList({ threads }) {\r\n  if (threads.length === 0) {\r\n    return <p>No threads available.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"threads-list\">\r\n      {threads.map((thread) => (\r\n        <div key={thread.id} className=\"thread-card\">\r\n          <p><strong>{thread.subject || 'No Subject'}</strong></p>\r\n          <p>{thread.snippet}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OneBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}