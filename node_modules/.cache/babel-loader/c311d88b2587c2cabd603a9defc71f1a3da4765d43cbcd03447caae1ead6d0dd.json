{"ast":null,"code":"// Fix the imports - remove useRef if not needed, add useCallback\nimport React,{useEffect,useState,useCallback}from'react';import axios from'axios';import'./OneBox.css';import ThreadDeletion from'./ThreadDeletion';import ThreadReply from'./ThreadReply';import ResetOneBox from'./ResetOneBox';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function OneBox(){const[threads,setThreads]=useState([]);const[selectedThread,setSelectedThread]=useState(null);const[threadMessages,setThreadMessages]=useState([]);const[loading,setLoading]=useState(true);const[messageLoading,setMessageLoading]=useState(false);const[error,setError]=useState(null);const[activeComponent,setActiveComponent]=useState('threadList');const[searchThreadId,setSearchThreadId]=useState('');const[showReplyBox,setShowReplyBox]=useState(false);const[notification,setNotification]=useState(null);// Add the theme state\nconst[theme,setTheme]=useState(()=>{// Get theme from localStorage or default to 'light'\nreturn localStorage.getItem('theme')||'light';});// Use the correct token that works in other components\nconst token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImVtYWlsIjoibW9udXJhbmphbjI1MUBnbWFpbC5jb20iLCJpZCI6MTU3OSwiZmlyc3ROYW1lIjoiQmlub2QiLCJsYXN0TmFtZSI6IkJoYWkifSwiaWF0IjoxNzQ2OTgwNTkyLCJleHAiOjE3Nzg1MTY1OTJ9.DrALXAi4YICQv0USd6W0S8f4yCleWM2z5pLSM1MaE-0';// Add the useEffect for theme\nuseEffect(()=>{// Set the data-theme attribute on the document element\ndocument.documentElement.setAttribute('data-theme',theme);// Save the theme preference to localStorage\nlocalStorage.setItem('theme',theme);},[theme]);// Add the toggleTheme function\nconst toggleTheme=()=>{setTheme(prevTheme=>prevTheme==='light'?'dark':'light');};// Make the API call when the component mounts\nuseEffect(()=>{const fetchThreads=async()=>{try{console.log(\"Fetching threads...\");// Debug log\n// Use the exact same configuration as in the working getThreads.js\nconst config={method:'get',url:'https://hiring.reachinbox.xyz/api/v1/onebox/list',headers:{Authorization:`Bearer ${token}`}};const response=await axios(config);// Debug log for response\nconsole.log(\"API Response:\",response);if(response.data&&response.data.data){setThreads(response.data.data);}else{setError('No threads found.');}}catch(err){console.error('Error fetching threads:',err);if(err.response){console.error(`Status: ${err.response.status}`);console.error(\"Response:\",err.response.data);setError(`Failed to fetch threads: ${err.response.status} - ${JSON.stringify(err.response.data)}`);}else if(err.request){console.error(\"No response received:\",err.request);setError('No response received from server.');}else{console.error(\"Error:\",err.message);setError(`Error: ${err.message}`);}}finally{setLoading(false);}};fetchThreads();},[]);// Handle reply thread action\nconst handleReplyThread=useCallback(()=>{setShowReplyBox(true);setNotification({type:'info',message:'Reply box opened (Shortcut: R)'});},[setShowReplyBox,setNotification]);// Keyboard shortcuts handler with proper dependencies\nuseEffect(()=>{const handleKeyDown=e=>{// Only apply shortcuts when not typing in an input or textarea\nif(e.target.tagName==='INPUT'||e.target.tagName==='TEXTAREA'){return;}// Only apply shortcuts when in thread messages view\nif(activeComponent==='threadMessages'&&selectedThread){if(e.key==='d'||e.key==='D'){var _document$querySelect;// Find and click the delete button from ThreadDeletion component\n(_document$querySelect=document.querySelector('.thread-delete-button'))===null||_document$querySelect===void 0?void 0:_document$querySelect.click();}else if(e.key==='r'||e.key==='R'){handleReplyThread();}}};window.addEventListener('keydown',handleKeyDown);return()=>{window.removeEventListener('keydown',handleKeyDown);};},[activeComponent,selectedThread,handleReplyThread]);// Auto-dismiss notification after 3 seconds\nuseEffect(()=>{if(notification){const timer=setTimeout(()=>{setNotification(null);},3000);return()=>clearTimeout(timer);}},[notification]);// Fetch messages for a specific thread\nconst fetchThreadMessages=async threadId=>{setMessageLoading(true);setError(null);// Clear any previous errors\ntry{console.log(`Fetching messages for thread ${threadId}...`);const config={method:'get',maxBodyLength:Infinity,url:`https://hiring.reachinbox.xyz/api/v1/onebox/messages/${threadId}`,headers:{Authorization:`Bearer ${token}`}};const response=await axios(config);console.log(\"Thread Messages Response:\",response);if(response.data&&response.data.data){setThreadMessages(response.data.data);// Find the thread in our list to set as selected\nconst thread=threads.find(t=>t.threadId===threadId);if(thread){setSelectedThread(thread);}else{// If thread not found in our list, create a minimal thread object\nsetSelectedThread({threadId,subject:`Thread #${threadId}`});}setActiveComponent('threadMessages');}else{setError('No messages found for this thread.');}}catch(err){console.error('Error fetching thread messages:',err);setError(`Failed to fetch thread messages: ${err.message}`);}finally{setMessageLoading(false);}};// Handle thread selection\nconst handleThreadSelect=thread=>{setSelectedThread(thread);fetchThreadMessages(thread.threadId);};// Handle thread ID search\nconst handleThreadSearch=e=>{e.preventDefault();if(searchThreadId.trim()){fetchThreadMessages(searchThreadId.trim());}};// Render the active component based on state\nconst renderActiveComponent=()=>{if(loading&&activeComponent==='threadList')return/*#__PURE__*/_jsx(\"p\",{children:\"Loading threads...\"});if(error)return/*#__PURE__*/_jsxs(\"p\",{className:\"error-message\",children:[\"Error: \",error]});switch(activeComponent){case'threadList':return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Email Threads\"}),threads.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No threads available.\"}):/*#__PURE__*/_jsx(ThreadListDisplay,{threads:threads,onSelectThread:handleThreadSelect})]});case'threadMessages':if(messageLoading)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading messages...\"});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"thread-header\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:()=>{setActiveComponent('threadList');setShowReplyBox(false);},children:\"\\u2190 Back to Threads\"}),/*#__PURE__*/_jsx(\"h2\",{children:(selectedThread===null||selectedThread===void 0?void 0:selectedThread.subject)||'Thread Messages'}),/*#__PURE__*/_jsxs(\"div\",{className:\"thread-actions\",children:[/*#__PURE__*/_jsx(ThreadDeletion,{thread:selectedThread,token:token,onDeleteStart:thread=>{setNotification({type:'info',message:`Deleting thread \"${thread.subject}\"...`});},onDeleteSuccess:(thread,data)=>{setNotification({type:'success',message:`Thread \"${thread.subject}\" deleted successfully (Shortcut: D)`});// Remove the thread from the local state\nsetThreads(threads=>threads.filter(t=>t.threadId!==thread.threadId));// Go back to thread list after deletion\nsetActiveComponent('threadList');},onDeleteError:(error,thread)=>{var _error$response,_error$response$data;setNotification({type:'error',message:`Failed to delete thread: ${((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||error.message}`});},showConfirmation:true}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button reply-button\",onClick:handleReplyThread,title:\"Reply to Thread (R)\",children:\"Reply\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleThreadSearch,className:\"thread-search-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchThreadId,onChange:e=>setSearchThreadId(e.target.value),placeholder:\"Search by Thread ID\",className:\"thread-search-input\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"thread-search-button\",children:\"Search\"})]})]}),/*#__PURE__*/_jsx(ThreadReply,{thread:selectedThread,token:token,isOpen:showReplyBox,onReplyStart:thread=>{setNotification({type:'info',message:`Sending reply to \"${thread.subject}\"...`});},onReplySuccess:(data,thread)=>{setNotification({type:'success',message:'Reply sent successfully!'});// Refresh the thread messages to include the new reply\nfetchThreadMessages(thread.threadId);},onReplyError:(error,thread)=>{var _error$response2,_error$response2$data;setNotification({type:'error',message:`Failed to send reply: ${((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||error.message}`});},onCancel:()=>setShowReplyBox(false),defaultValues:{// You can pre-populate these values based on the selected thread\nsubject:`Re: ${(selectedThread===null||selectedThread===void 0?void 0:selectedThread.subject)||''}`// Add other default values as needed\n}}),threadMessages.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No messages available for this thread.\"}):/*#__PURE__*/_jsx(ThreadMessagesDisplay,{messages:threadMessages})]});default:return/*#__PURE__*/_jsx(\"p\",{children:\"Select a component from the sidebar\"});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"onebox-layout\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"onebox-sidebar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"onebox-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"OneBox\"}),/*#__PURE__*/_jsx(\"button\",{className:\"theme-toggle\",onClick:toggleTheme,title:theme==='light'?'Switch to Dark Mode':'Switch to Light Mode',children:theme==='light'?'🌙':'☀️'})]}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:activeComponent==='threadList'?'active':'',onClick:()=>setActiveComponent('threadList'),children:\"Thread List\"}),/*#__PURE__*/_jsx(\"li\",{className:activeComponent==='threadMessages'?'active':'',onClick:()=>{if(selectedThread){setActiveComponent('threadMessages');}else{setActiveComponent('threadMessages');setThreadMessages([]);}},children:\"Thread Messages\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"sidebar-actions\",children:/*#__PURE__*/_jsx(ResetOneBox,{token:token,onResetStart:()=>{setNotification({type:'info',message:'Resetting OneBox data...'});},onResetSuccess:data=>{setNotification({type:'success',message:'OneBox data reset successfully!'});// Clear thread messages\nsetThreadMessages([]);// Clear selected thread\nsetSelectedThread(null);// Close reply box if open\nsetShowReplyBox(false);// Go back to thread list\nsetActiveComponent('threadList');// Refresh the threads list\nsetLoading(true);// Fetch threads again\nconst fetchThreads=async()=>{try{const config={method:'get',url:'https://hiring.reachinbox.xyz/api/v1/onebox/list',headers:{Authorization:`Bearer ${token}`}};const response=await axios(config);if(response.data&&response.data.data){setThreads(response.data.data);}else{setError('No threads found.');}}catch(err){console.error('Error fetching threads:',err);setError(`Failed to fetch threads: ${err.message}`);}finally{setLoading(false);}};fetchThreads();},onResetError:error=>{var _error$response3,_error$response3$data;setNotification({type:'error',message:`Failed to reset data: ${((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||error.message}`});},showConfirmation:true})}),/*#__PURE__*/_jsxs(\"div\",{className:\"keyboard-shortcuts\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Keyboard Shortcuts\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"D\"}),\" - Delete thread\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"R\"}),\" - Reply to thread\"]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"onebox-main-content\",children:renderActiveComponent()}),notification&&/*#__PURE__*/_jsx(\"div\",{className:`notification ${notification.type}`,children:notification.message})]});}// Component to display threads\nfunction ThreadListDisplay(_ref){let{threads,onSelectThread}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"threads-list\",children:threads.map(thread=>/*#__PURE__*/_jsxs(\"div\",{className:\"thread-card\",onClick:()=>onSelectThread(thread),children:[/*#__PURE__*/_jsx(\"h3\",{children:thread.subject||'No Subject'}),/*#__PURE__*/_jsx(\"p\",{children:thread.body?thread.body.substring(0,100)+'...':'No body available'}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Thread ID:\"}),\" \",thread.threadId]}),thread.fromName&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"From:\"}),\" \",thread.fromName]}),thread.toEmail&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"To:\"}),\" \",thread.toEmail]}),/*#__PURE__*/_jsx(\"div\",{className:\"view-thread\",children:\"View Messages \\u2192\"})]},thread.id||thread.threadId))});}// Component to display thread messages\nfunction ThreadMessagesDisplay(_ref2){let{messages}=_ref2;return/*#__PURE__*/_jsx(\"div\",{className:\"thread-messages\",children:messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"message-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-from\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"From:\"}),\" \",message.fromName||message.from||'Unknown']}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-to\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"To:\"}),\" \",message.toName||message.to||'Unknown']}),/*#__PURE__*/_jsx(\"div\",{className:\"message-date\",children:new Date(message.date).toLocaleString()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-subject\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Subject:\"}),\" \",message.subject||'No Subject']}),/*#__PURE__*/_jsx(\"div\",{className:\"message-body\",dangerouslySetInnerHTML:{__html:message.body||'No content'}})]},message.id||index))});}export default OneBox;","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","ThreadDeletion","ThreadReply","ResetOneBox","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","OneBox","threads","setThreads","selectedThread","setSelectedThread","threadMessages","setThreadMessages","loading","setLoading","messageLoading","setMessageLoading","error","setError","activeComponent","setActiveComponent","searchThreadId","setSearchThreadId","showReplyBox","setShowReplyBox","notification","setNotification","theme","setTheme","localStorage","getItem","token","document","documentElement","setAttribute","setItem","toggleTheme","prevTheme","fetchThreads","console","log","config","method","url","headers","Authorization","response","data","err","status","JSON","stringify","request","message","handleReplyThread","type","handleKeyDown","e","target","tagName","key","_document$querySelect","querySelector","click","window","addEventListener","removeEventListener","timer","setTimeout","clearTimeout","fetchThreadMessages","threadId","maxBodyLength","Infinity","thread","find","t","subject","handleThreadSelect","handleThreadSearch","preventDefault","trim","renderActiveComponent","children","className","length","ThreadListDisplay","onSelectThread","onClick","onDeleteStart","onDeleteSuccess","filter","onDeleteError","_error$response","_error$response$data","showConfirmation","title","onSubmit","value","onChange","placeholder","isOpen","onReplyStart","onReplySuccess","onReplyError","_error$response2","_error$response2$data","onCancel","defaultValues","ThreadMessagesDisplay","messages","onResetStart","onResetSuccess","onResetError","_error$response3","_error$response3$data","_ref","map","body","substring","fromName","toEmail","id","_ref2","index","from","toName","to","Date","date","toLocaleString","dangerouslySetInnerHTML","__html"],"sources":["D:/OneDrive/Desktop/prj/intern_ass/reachinbox-assignment/src/components/OneBox.js"],"sourcesContent":["// Fix the imports - remove useRef if not needed, add useCallback\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './OneBox.css';\r\nimport ThreadDeletion from './ThreadDeletion';\r\nimport ThreadReply from './ThreadReply';\r\nimport ResetOneBox from './ResetOneBox';\r\n\r\nfunction OneBox() {\r\n  const [threads, setThreads] = useState([]);\r\n  const [selectedThread, setSelectedThread] = useState(null);\r\n  const [threadMessages, setThreadMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [messageLoading, setMessageLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeComponent, setActiveComponent] = useState('threadList');\r\n  const [searchThreadId, setSearchThreadId] = useState('');\r\n  const [showReplyBox, setShowReplyBox] = useState(false);\r\n  const [notification, setNotification] = useState(null);\r\n  \r\n  // Add the theme state\r\n  const [theme, setTheme] = useState(() => {\r\n    // Get theme from localStorage or default to 'light'\r\n    return localStorage.getItem('theme') || 'light';\r\n  });\r\n\r\n  // Use the correct token that works in other components\r\n  const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImVtYWlsIjoibW9udXJhbmphbjI1MUBnbWFpbC5jb20iLCJpZCI6MTU3OSwiZmlyc3ROYW1lIjoiQmlub2QiLCJsYXN0TmFtZSI6IkJoYWkifSwiaWF0IjoxNzQ2OTgwNTkyLCJleHAiOjE3Nzg1MTY1OTJ9.DrALXAi4YICQv0USd6W0S8f4yCleWM2z5pLSM1MaE-0';\r\n\r\n  // Add the useEffect for theme\r\n  useEffect(() => {\r\n    // Set the data-theme attribute on the document element\r\n    document.documentElement.setAttribute('data-theme', theme);\r\n    // Save the theme preference to localStorage\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme]);\r\n\r\n  // Add the toggleTheme function\r\n  const toggleTheme = () => {\r\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  // Make the API call when the component mounts\r\n  useEffect(() => {\r\n    const fetchThreads = async () => {\r\n      try {\r\n        console.log(\"Fetching threads...\"); // Debug log\r\n        \r\n        // Use the exact same configuration as in the working getThreads.js\r\n        const config = {\r\n          method: 'get',\r\n          url: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        };\r\n        \r\n        const response = await axios(config);\r\n        \r\n        // Debug log for response\r\n        console.log(\"API Response:\", response);\r\n\r\n        if (response.data && response.data.data) {\r\n          setThreads(response.data.data);\r\n        } else {\r\n          setError('No threads found.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching threads:', err);\r\n        if (err.response) {\r\n          console.error(`Status: ${err.response.status}`);\r\n          console.error(\"Response:\", err.response.data);\r\n          setError(`Failed to fetch threads: ${err.response.status} - ${JSON.stringify(err.response.data)}`);\r\n        } else if (err.request) {\r\n          console.error(\"No response received:\", err.request);\r\n          setError('No response received from server.');\r\n        } else {\r\n          console.error(\"Error:\", err.message);\r\n          setError(`Error: ${err.message}`);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchThreads();\r\n  }, []);\r\n\r\n  // Handle reply thread action\r\n  const handleReplyThread = useCallback(() => {\r\n    setShowReplyBox(true);\r\n    setNotification({\r\n      type: 'info',\r\n      message: 'Reply box opened (Shortcut: R)'\r\n    });\r\n  }, [setShowReplyBox, setNotification]);\r\n\r\n  // Keyboard shortcuts handler with proper dependencies\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      // Only apply shortcuts when not typing in an input or textarea\r\n      if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {\r\n        return;\r\n      }\r\n\r\n      // Only apply shortcuts when in thread messages view\r\n      if (activeComponent === 'threadMessages' && selectedThread) {\r\n        if (e.key === 'd' || e.key === 'D') {\r\n          // Find and click the delete button from ThreadDeletion component\r\n          document.querySelector('.thread-delete-button')?.click();\r\n        } else if (e.key === 'r' || e.key === 'R') {\r\n          handleReplyThread();\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [activeComponent, selectedThread, handleReplyThread]);\r\n\r\n  // Auto-dismiss notification after 3 seconds\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  // Fetch messages for a specific thread\r\n  const fetchThreadMessages = async (threadId) => {\r\n    setMessageLoading(true);\r\n    setError(null); // Clear any previous errors\r\n    try {\r\n      console.log(`Fetching messages for thread ${threadId}...`);\r\n      \r\n      const config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: `https://hiring.reachinbox.xyz/api/v1/onebox/messages/${threadId}`,\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      \r\n      const response = await axios(config);\r\n      console.log(\"Thread Messages Response:\", response);\r\n\r\n      if (response.data && response.data.data) {\r\n        setThreadMessages(response.data.data);\r\n        // Find the thread in our list to set as selected\r\n        const thread = threads.find(t => t.threadId === threadId);\r\n        if (thread) {\r\n          setSelectedThread(thread);\r\n        } else {\r\n          // If thread not found in our list, create a minimal thread object\r\n          setSelectedThread({ threadId, subject: `Thread #${threadId}` });\r\n        }\r\n        setActiveComponent('threadMessages');\r\n      } else {\r\n        setError('No messages found for this thread.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching thread messages:', err);\r\n      setError(`Failed to fetch thread messages: ${err.message}`);\r\n    } finally {\r\n      setMessageLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle thread selection\r\n  const handleThreadSelect = (thread) => {\r\n    setSelectedThread(thread);\r\n    fetchThreadMessages(thread.threadId);\r\n  };\r\n\r\n  // Handle thread ID search\r\n  const handleThreadSearch = (e) => {\r\n    e.preventDefault();\r\n    if (searchThreadId.trim()) {\r\n      fetchThreadMessages(searchThreadId.trim());\r\n    }\r\n  };\r\n\r\n  // Render the active component based on state\r\n  const renderActiveComponent = () => {\r\n    if (loading && activeComponent === 'threadList') return <p>Loading threads...</p>;\r\n    if (error) return <p className=\"error-message\">Error: {error}</p>;\r\n\r\n    switch (activeComponent) {\r\n      case 'threadList':\r\n        return (\r\n          <>\r\n            <h2>Email Threads</h2>\r\n            {threads.length === 0 ? (\r\n              <p>No threads available.</p>\r\n            ) : (\r\n              <ThreadListDisplay \r\n                threads={threads} \r\n                onSelectThread={handleThreadSelect}\r\n              />\r\n            )}\r\n          </>\r\n        );\r\n      case 'threadMessages':\r\n        if (messageLoading) return <p>Loading messages...</p>;\r\n        return (\r\n          <>\r\n            <div className=\"thread-header\">\r\n              <button \r\n                className=\"back-button\" \r\n                onClick={() => {\r\n                  setActiveComponent('threadList');\r\n                  setShowReplyBox(false);\r\n                }}\r\n              >\r\n                ← Back to Threads\r\n              </button>\r\n              <h2>{selectedThread?.subject || 'Thread Messages'}</h2>\r\n              <div className=\"thread-actions\">\r\n                <ThreadDeletion \r\n                  thread={selectedThread}\r\n                  token={token}\r\n                  onDeleteStart={(thread) => {\r\n                    setNotification({\r\n                      type: 'info',\r\n                      message: `Deleting thread \"${thread.subject}\"...`\r\n                    });\r\n                  }}\r\n                  onDeleteSuccess={(thread, data) => {\r\n                    setNotification({\r\n                      type: 'success',\r\n                      message: `Thread \"${thread.subject}\" deleted successfully (Shortcut: D)`\r\n                    });\r\n                    \r\n                    // Remove the thread from the local state\r\n                    setThreads(threads => threads.filter(t => t.threadId !== thread.threadId));\r\n                    \r\n                    // Go back to thread list after deletion\r\n                    setActiveComponent('threadList');\r\n                  }}\r\n                  onDeleteError={(error, thread) => {\r\n                    setNotification({\r\n                      type: 'error',\r\n                      message: `Failed to delete thread: ${error.response?.data?.message || error.message}`\r\n                    });\r\n                  }}\r\n                  showConfirmation={true}\r\n                />\r\n                <button \r\n                  className=\"action-button reply-button\" \r\n                  onClick={handleReplyThread}\r\n                  title=\"Reply to Thread (R)\"\r\n                >\r\n                  Reply\r\n                </button>\r\n              </div>\r\n              <form onSubmit={handleThreadSearch} className=\"thread-search-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={searchThreadId}\r\n                  onChange={(e) => setSearchThreadId(e.target.value)}\r\n                  placeholder=\"Search by Thread ID\"\r\n                  className=\"thread-search-input\"\r\n                />\r\n                <button type=\"submit\" className=\"thread-search-button\">Search</button>\r\n              </form>\r\n            </div>\r\n            \r\n            <ThreadReply\r\n              thread={selectedThread}\r\n              token={token}\r\n              isOpen={showReplyBox}\r\n              onReplyStart={(thread) => {\r\n                setNotification({\r\n                  type: 'info',\r\n                  message: `Sending reply to \"${thread.subject}\"...`\r\n                });\r\n              }}\r\n              onReplySuccess={(data, thread) => {\r\n                setNotification({\r\n                  type: 'success',\r\n                  message: 'Reply sent successfully!'\r\n                });\r\n                \r\n                // Refresh the thread messages to include the new reply\r\n                fetchThreadMessages(thread.threadId);\r\n              }}\r\n              onReplyError={(error, thread) => {\r\n                setNotification({\r\n                  type: 'error',\r\n                  message: `Failed to send reply: ${error.response?.data?.message || error.message}`\r\n                });\r\n              }}\r\n              onCancel={() => setShowReplyBox(false)}\r\n              defaultValues={{\r\n                // You can pre-populate these values based on the selected thread\r\n                subject: `Re: ${selectedThread?.subject || ''}`,\r\n                // Add other default values as needed\r\n              }}\r\n            />\r\n            \r\n            {threadMessages.length === 0 ? (\r\n              <p>No messages available for this thread.</p>\r\n            ) : (\r\n              <ThreadMessagesDisplay messages={threadMessages} />\r\n            )}\r\n          </>\r\n        );\r\n      default:\r\n        return <p>Select a component from the sidebar</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"onebox-layout\">\r\n      <div className=\"onebox-sidebar\">\r\n  <div className=\"onebox-header\">\r\n    <h3>OneBox</h3>\r\n    <button \r\n      className=\"theme-toggle\" \r\n      onClick={toggleTheme}\r\n      title={theme === 'light' ? 'Switch to Dark Mode' : 'Switch to Light Mode'}\r\n    >\r\n      {theme === 'light' ? '🌙' : '☀️'}\r\n    </button>\r\n  </div>\r\n  \r\n  <ul>\r\n    <li \r\n      className={activeComponent === 'threadList' ? 'active' : ''}\r\n      onClick={() => setActiveComponent('threadList')}\r\n    >\r\n      Thread List\r\n    </li>\r\n    <li \r\n      className={activeComponent === 'threadMessages' ? 'active' : ''}\r\n      onClick={() => {\r\n        if (selectedThread) {\r\n          setActiveComponent('threadMessages');\r\n        } else {\r\n          setActiveComponent('threadMessages');\r\n          setThreadMessages([]);\r\n        }\r\n      }}\r\n    >\r\n      Thread Messages\r\n    </li>\r\n    {/* Add more menu items here as needed */}\r\n  </ul>\r\n  \r\n  <div className=\"sidebar-actions\">\r\n    <ResetOneBox \r\n      token={token}\r\n      onResetStart={() => {\r\n        setNotification({\r\n          type: 'info',\r\n          message: 'Resetting OneBox data...'\r\n        });\r\n      }}\r\n      onResetSuccess={(data) => {\r\n        setNotification({\r\n          type: 'success',\r\n          message: 'OneBox data reset successfully!'\r\n        });\r\n        \r\n        // Clear thread messages\r\n        setThreadMessages([]);\r\n        \r\n        // Clear selected thread\r\n        setSelectedThread(null);\r\n        \r\n        // Close reply box if open\r\n        setShowReplyBox(false);\r\n        \r\n        // Go back to thread list\r\n        setActiveComponent('threadList');\r\n        \r\n        // Refresh the threads list\r\n        setLoading(true);\r\n        \r\n        // Fetch threads again\r\n        const fetchThreads = async () => {\r\n          try {\r\n            const config = {\r\n              method: 'get',\r\n              url: 'https://hiring.reachinbox.xyz/api/v1/onebox/list',\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            };\r\n            \r\n            const response = await axios(config);\r\n            \r\n            if (response.data && response.data.data) {\r\n              setThreads(response.data.data);\r\n            } else {\r\n              setError('No threads found.');\r\n            }\r\n          } catch (err) {\r\n            console.error('Error fetching threads:', err);\r\n            setError(`Failed to fetch threads: ${err.message}`);\r\n          } finally {\r\n            setLoading(false);\r\n          }\r\n        };\r\n\r\n        fetchThreads();\r\n      }}\r\n      onResetError={(error) => {\r\n        setNotification({\r\n          type: 'error',\r\n          message: `Failed to reset data: ${error.response?.data?.message || error.message}`\r\n        });\r\n      }}\r\n      showConfirmation={true}\r\n    />\r\n  </div>\r\n  \r\n  <div className=\"keyboard-shortcuts\">\r\n    <h4>Keyboard Shortcuts</h4>\r\n    <ul>\r\n      <li><strong>D</strong> - Delete thread</li>\r\n      <li><strong>R</strong> - Reply to thread</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n      <div className=\"onebox-main-content\">\r\n        {renderActiveComponent()}\r\n      </div>\r\n      \r\n      {notification && (\r\n        <div className={`notification ${notification.type}`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Component to display threads\r\nfunction ThreadListDisplay({ threads, onSelectThread }) {\r\n  return (\r\n    <div className=\"threads-list\">\r\n      {threads.map((thread) => (\r\n        <div \r\n          key={thread.id || thread.threadId} \r\n          className=\"thread-card\"\r\n          onClick={() => onSelectThread(thread)}\r\n        >\r\n          <h3>{thread.subject || 'No Subject'}</h3>\r\n          <p>{thread.body ? thread.body.substring(0, 100) + '...' : 'No body available'}</p>\r\n          <p><strong>Thread ID:</strong> {thread.threadId}</p>\r\n          {thread.fromName && <p><strong>From:</strong> {thread.fromName}</p>}\r\n          {thread.toEmail && <p><strong>To:</strong> {thread.toEmail}</p>}\r\n          <div className=\"view-thread\">View Messages →</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Component to display thread messages\r\nfunction ThreadMessagesDisplay({ messages }) {\r\n  return (\r\n    <div className=\"thread-messages\">\r\n      {messages.map((message, index) => (\r\n        <div key={message.id || index} className=\"message-card\">\r\n          <div className=\"message-header\">\r\n            <div className=\"message-from\">\r\n              <strong>From:</strong> {message.fromName || message.from || 'Unknown'}\r\n            </div>\r\n            <div className=\"message-to\">\r\n              <strong>To:</strong> {message.toName || message.to || 'Unknown'}\r\n            </div>\r\n            <div className=\"message-date\">\r\n              {new Date(message.date).toLocaleString()}\r\n            </div>\r\n          </div>\r\n          <div className=\"message-subject\">\r\n            <strong>Subject:</strong> {message.subject || 'No Subject'}\r\n          </div>\r\n          <div \r\n            className=\"message-body\"\r\n            dangerouslySetInnerHTML={{ __html: message.body || 'No content' }}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OneBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}