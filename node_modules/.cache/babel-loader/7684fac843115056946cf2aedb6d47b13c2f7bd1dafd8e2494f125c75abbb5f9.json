{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Desktop\\\\prj\\\\intern_ass\\\\reachinbox-assignment\\\\src\\\\components\\\\OneBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './OneBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OneBox() {\n  _s();\n  const [threads, setThreads] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Make the API call when the component mounts\n  useEffect(() => {\n    const fetchThreads = async () => {\n      try {\n        console.log(\"Fetching threads...\"); // Debug log\n        const response = await axios.get('https://hiring.reachinbox.xyz/api/v1/onebox/list', {\n          headers: {\n            Authorization: 'Bearer your_jwt_token_here' // Replace with actual JWT token\n          }\n        });\n\n        // Debug log for response\n        console.log(\"API Response:\", response);\n        if (response.data && response.data.data) {\n          setThreads(response.data.data); // Assuming the response contains a 'data' field with threads\n        } else {\n          setError('No threads found.');\n        }\n      } catch (err) {\n        console.error('Error fetching threads:', err);\n        setError('Failed to fetch threads.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchThreads();\n  }, []);\n\n  // Loading or error states\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading threads...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"onebox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email Threads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), threads.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No threads available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ThreadList, {\n      threads: threads\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n// Subcomponent to display threads\n_s(OneBox, \"176PDi5m4uWjlo2O6YaXAVCBr8s=\");\n_c = OneBox;\nfunction ThreadList({\n  threads\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"threads-list\",\n    children: threads.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: thread.subject || 'No Subject'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: thread.snippet || 'No Snippet'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"From:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 14\n        }, this), \" \", thread.fromName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"To:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 14\n        }, this), \" \", thread.toEmail]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, thread.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ThreadList;\nexport default OneBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"OneBox\");\n$RefreshReg$(_c2, \"ThreadList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","OneBox","_s","threads","setThreads","loading","setLoading","error","setError","fetchThreads","console","log","response","get","headers","Authorization","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","ThreadList","_c","map","thread","subject","snippet","fromName","toEmail","id","_c2","$RefreshReg$"],"sources":["D:/OneDrive/Desktop/prj/intern_ass/reachinbox-assignment/src/components/OneBox.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './OneBox.css';\r\n\r\nfunction OneBox() {\r\n  const [threads, setThreads] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Make the API call when the component mounts\r\n  useEffect(() => {\r\n    const fetchThreads = async () => {\r\n      try {\r\n        console.log(\"Fetching threads...\"); // Debug log\r\n        const response = await axios.get('https://hiring.reachinbox.xyz/api/v1/onebox/list', {\r\n          headers: {\r\n            Authorization: 'Bearer your_jwt_token_here', // Replace with actual JWT token\r\n          },\r\n        });\r\n        \r\n        // Debug log for response\r\n        console.log(\"API Response:\", response);\r\n\r\n        if (response.data && response.data.data) {\r\n          setThreads(response.data.data); // Assuming the response contains a 'data' field with threads\r\n        } else {\r\n          setError('No threads found.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching threads:', err);\r\n        setError('Failed to fetch threads.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchThreads();\r\n  }, []);\r\n\r\n  // Loading or error states\r\n  if (loading) return <p>Loading threads...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"onebox-container\">\r\n      <h2>Email Threads</h2>\r\n      {threads.length === 0 ? (\r\n        <p>No threads available.</p>\r\n      ) : (\r\n        <ThreadList threads={threads} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Subcomponent to display threads\r\nfunction ThreadList({ threads }) {\r\n  return (\r\n    <div className=\"threads-list\">\r\n      {threads.map((thread) => (\r\n        <div key={thread.id} className=\"thread-card\">\r\n          <h3>{thread.subject || 'No Subject'}</h3>\r\n          <p>{thread.snippet || 'No Snippet'}</p>\r\n          <p><strong>From:</strong> {thread.fromName}</p>\r\n          <p><strong>To:</strong> {thread.toEmail}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OneBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}